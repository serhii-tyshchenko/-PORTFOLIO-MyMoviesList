{"version":3,"sources":["services/db/firebase.js","services/api/omdb.js","services/db/ls.js","services/index.js","assets/utils/index.js","store/action-types.js","store/reducers/_data.js","store/reducers/_movie-info.js","store/reducers/_search-results.js","store/reducers/_user.js","store/reducers/_api.js","store/reducers/_settings.js","store/reducers/_modals.js","store/reducers/_notifications.js","store/reducers/index.js","store/index.js","components/UI/UIButton/UIButton.jsx","components/UI/UIIconButton/UIIconButton.jsx","components/UI/UIInput/UIInput.jsx","components/UI/UISelect/UISelect.jsx","components/UI/UITabs/UITabs.jsx","store/selectors.js","assets/localization/translations.js","contexts/localization.jsx","assets/localization/index.js","components/UI/UIModal/UIModal.jsx","hooks/useKeypress.js","components/UI/UINotification/UINotification.jsx","components/ErrorBoundary/ErrorBoundary.jsx","components/Layout/Nav/Nav.jsx","components/Layout/Main/Main.jsx","components/Layout/Header/Header.jsx","store/actions/_data.js","store/actions/_movie-info.js","store/actions/_user.js","store/actions/_settings.js","store/actions/_modals.js","components/Movie/SearchMovieForm/SearchMovieForm.jsx","components/Movie/MovieList/MovieList.jsx","assets/images/no-image.svg","components/Movie/MovieListItem/MovieListItem.jsx","components/Movie/MovieListSorter/MovieListSorter.jsx","components/Movie/MovieModal/MovieModalSkeleton/MovieModalSkeleton.jsx","components/Movie/MovieModal/MovieModal.jsx","components/Movie/MovieMenu/MovieMenu.jsx","components/LanguageSelector/LanguageSelector.jsx","components/ThemeToggler/ThemeToggler.jsx","components/AuthBtn/AuthBtn.jsx","components/AuthModal/SignInForm/SignInForm.jsx","components/AuthModal/SignUpForm/SignUpForm.jsx","components/AuthModal/SocialLogInForm/SocialLogInForm.jsx","components/AuthModal/AuthModal.jsx","components/NotificationService/NotificationService.jsx","store/actions/_notifications.js","layouts/BaseLayout.jsx","pages/Home/Home.jsx","App.jsx","index.jsx"],"names":["firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","constructor","signInWithEmail","email","password","this","auth","signInWithEmailAndPassword","signUpWithEmail","createUserWithEmailAndPassword","signInWithGoogle","firebase","signInWithPopup","GoogleAuthProvider","signOut","addItem","userID","item","dataCollection","db","collection","rootCollection","doc","id","set","updateItem","data","merge","removeItem","itemId","delete","getItems","get","getSettings","settingsCollection","commonSettingsDoc","updateSettings","initializeApp","firestore","searchMovie","query","fetch","baseUrl","then","response","json","getMovieInfo","keyName","loadState","serializedState","localStorage","getItem","JSON","parse","err","saveState","state","stringify","setItem","clearState","firebaseService","sortArrayOfObjects","array","parameter","order","sort","a","b","itemA","toUpperCase","itemB","ADD_ITEM","UPDATE_ITEM","REMOVE_ITEM","GET_ITEMS","SORT_MOVIES","SEARCH_MOVIE","GET_MOVIE_INFO","SIGN_IN","SIGN_OUT","GET_SETTINGS","UPDATE_SETTINGS","SHOW_NOTIFICATION","HIDE_NOTIFICATION","API_REQUEST_STARTED","API_REQUEST_ENDED","DB_REQUEST_STARTED","DB_REQUEST_ENDED","SHOW_MODAL","HIDE_MODAL","initialState","isLoading","uid","isLogged","error","language","theme","isVisible","fav","type","message","rootReducer","combineReducers","action","payload","filter","length","map","movieInfo","searchResults","user","settings","api","modals","modalName","notifications","persistedState","ls","composeTools","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","subscribe","getState","UIButton","props","onClick","extraClassName","btnType","size","text","buttonClassName","className","defaultProps","UIIconButton","icon","title","UIInput","name","value","onChange","placeholder","required","autofocus","componentClassName","autoFocus","UISelect","options","option","disabled","label","UITabs","labels","children","activeTab","onTabClick","tabsClassName","activeTabIndex","setActiveTabIndex","useState","handleTabClick","e","indexOf","target","setTabClass","index","child","getData","getIsUserLogged","getUserId","getIsAuthModalVisible","getIsFavModalVisible","getAppLanguage","getAppTheme","getSearchResults","getNotifications","findById","find","imdbID","getMovieById","createSelector","_","getSearchResultById","getMoviesByList","list","lists","includes","languages","translations","en","SIGN_UP","SEARCH_MOVIE_PLACEHOLDER","AUTHENIFICATION","YOUR_EMAIL","YOUR_PASSWORD","CREATE_AN_ACCOUNT","CONNECT_WITH","TOGGLE_THEME","TOGGLE_LANGUAGE","MOVIE_INFO","HOME","FAVOURITES","WATCH_LATER","WATCHED","GENRE","CAST","DIRECTOR","COUNTRY","DURATION","RELEASE","RATING","CLOSE","SORT_BY_TITLE_A_Z","SORT_BY_TITLE_Z_A","SORT_BY_YEAR_ASC","SORT_BY_YEAR_DSC","ua","ru","Localization","createContext","displayName","LocalizationProvider","useSelector","Provider","lang","UIModal","onClose","STR","useContext","modalRoot","document","getElementById","key","useEffect","onKeyup","addEventListener","removeEventListener","createPortal","role","aria-labelledby","aria-modal","titles","warning","success","UINotification","onCloseClick","autoclose","timer","setTimeout","clearTimeout","ErrorBoundary","React","Component","errorInfo","componentDidCatch","setState","render","toString","componentStack","Nav","isNavExpanded","toggleNav","to","exact","Main","Header","ThemeToggler","AuthBtn","actionError","actionSignIn","dispatch","catch","finally","showModal","hideModal","SearchMovieForm","memo","useDispatch","history","useHistory","setQuery","isFormVisible","setFormVisible","handleSubmit","evt","preventDefault","Search","Error","push","toggleForm","onSubmit","MovieList","sortedBy","setSortedBy","sortOptions","useLocation","pathname","slice","handleShowInfoClick","sortOption","sortMovies","onShowInfoClick","MovieListItem","Title","Poster","posterUrl","Year","year","posterURL","noimage","src","alt","width","height","loading","MovieListSorter","MovieModalSkeleton","MovieModal","Runtime","Genre","Director","Country","Plot","imdbRating","Actors","posterSrc","noImage","onError","onerror","MovieMenu","saved","searched","isMenuOpened","toggleMenu","movie","handleChange","htmlFor","checked","LanguageSelector","currLang","btnIcon","SignInForm","SignUpForm","SocialLogInForm","onSignInWithGoogle","AuthModal","isModalVisible","initialFormData","formData","setFormData","onFormChange","event","NotificationService","BaseLayout","Home","App","documentElement","setAttribute","forEach","ReactDOM"],"mappings":"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","file":"static/js/main.bc34927c.chunk.js","sourcesContent":["/* eslint-disable max-len */\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FB_API_KEY,\n  authDomain: process.env.REACT_APP_FB_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FB_DATABASE_URL,\n  projectId: process.env.REACT_APP_FB_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FB_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FB_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FB_APP_ID,\n  measurementId: process.env.REACT_APP_FB_MEASUREMENT_ID,\n};\n\nclass Firebase {\n  constructor() {\n    firebase.initializeApp(firebaseConfig);\n    this.auth = firebase.auth();\n    this.db = firebase.firestore();\n\n    this.rootCollection = 'data';\n    this.dataCollection = 'movies-list';\n    this.settingsCollection = 'settings';\n    this.commonSettingsDoc = 'common';\n  }\n\n    signInWithEmail = (email, password) => this.auth.signInWithEmailAndPassword(email, password);\n\n    signUpWithEmail = (email, password) => this.auth.createUserWithEmailAndPassword(email, password);\n\n    signInWithGoogle = () => firebase.auth().signInWithPopup(new firebase.auth.GoogleAuthProvider());\n\n    signOut = () => this.auth.signOut();\n\n    addItem = (userID, item, dataCollection = this.dataCollection) => this.db\n      .collection(this.rootCollection)\n      .doc(userID)\n      .collection(dataCollection)\n      .doc(item.id)\n      .set(item);\n\n    updateItem = (userID, data, dataCollection = this.dataCollection) => this.db\n      .collection(this.rootCollection)\n      .doc(userID)\n      .collection(dataCollection)\n      .doc(data.id)\n      .set(data, { merge: true });\n\n    removeItem = (userID, itemId, dataCollection = this.dataCollection) => this.db\n      .collection(this.rootCollection)\n      .doc(userID)\n      .collection(dataCollection)\n      .doc(itemId)\n      .delete();\n\n    getItems = (userID, dataCollection = this.dataCollection) => this.db\n      .collection(this.rootCollection)\n      .doc(userID)\n      .collection(dataCollection)\n      .get();\n\n    getSettings = (userID) => this.db\n      .collection(this.rootCollection)\n      .doc(userID)\n      .collection(this.settingsCollection)\n      .doc(this.commonSettingsDoc)\n      .get();\n\n    updateSettings = (userID, data) => this.db\n      .collection(this.rootCollection)\n      .doc(userID)\n      .collection(this.settingsCollection)\n      .doc(this.commonSettingsDoc)\n      .set(data, { merge: true });\n}\n\nexport default new Firebase();\n","/* eslint-disable implicit-arrow-linebreak */\nconst omdbApiKey = process.env.REACT_APP_OMDB_API_KEY;\n\nclass API {\n  constructor(apiKey) {\n    this.apiKey = apiKey;\n    this.baseUrl = `https://www.omdbapi.com/?apikey=${this.apiKey}`;\n  }\n\n  searchMovie = (query) =>\n    fetch(`${this.baseUrl}&s=${query}`)\n      .then((response) => response.json())\n      .then((data) => data);\n\n  getMovieInfo = (id) =>\n    fetch(`${this.baseUrl}&i=${id}`)\n      .then((response) => response.json())\n      .then((data) => data);\n}\n\nexport default new API(omdbApiKey);\n","const keyName = 'MyMoviesList';\n\nexport const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem(keyName);\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(keyName, serializedState);\n  } catch {\n    // ignore write errors\n  }\n};\n\nexport const clearState = () => {\n  localStorage.removeItem(keyName);\n};\n","import firebaseService from './db/firebase';\nimport api from './api/omdb';\nimport * as ls from './db/ls';\n\nconst db = firebaseService;\nexport { db, ls, api };\n","export function formatDate(date) {\n  const monthNames = [\n    '01',\n    '02',\n    '03',\n    '04',\n    '05',\n    '06',\n    '07',\n    '08',\n    '09',\n    '10',\n    '11',\n    '12',\n  ];\n  const day = date.getDate().toString().padStart(2, '0');\n  const monthIndex = date.getMonth();\n  const year = date.getFullYear();\n\n  return `${year}-${monthNames[monthIndex]}-${day}`;\n}\n\nexport function formatTime(date) {\n  const hours = date.getHours().toString().padStart(2, '0');\n  const minutes = date.getMinutes().toString().padStart(2, '0');\n\n  return `${hours}:${minutes}`;\n}\n\nexport function sortByABC(a, b) {\n  const nameA = a.toUpperCase();\n  const nameB = b.toUpperCase();\n  if (nameA < nameB) {\n    return -1;\n  }\n  if (nameA > nameB) {\n    return 1;\n  }\n  return 0;\n}\n\nexport function sortArrayOfObjects(array, parameter, order = 'asc') {\n  return [\n    ...array.sort((a, b) => {\n      const itemA = a[parameter].toUpperCase();\n      const itemB = b[parameter].toUpperCase();\n      if (itemA < itemB) {\n        return order === 'asc' ? -1 : 1;\n      }\n      if (itemA > itemB) {\n        return order === 'asc' ? 1 : -1;\n      }\n      return 0;\n    }),\n  ];\n}\n","export const ADD_ITEM = 'ADD_ITEM';\nexport const UPDATE_ITEM = 'UPDATE_ITEM';\nexport const REMOVE_ITEM = 'REMOVE_ITEM';\nexport const GET_ITEMS = 'GET_ITEMS';\nexport const SORT_MOVIES = 'SORT_MOVIES';\nexport const SEARCH_MOVIE = 'SEARCH_MOVIE';\nexport const GET_MOVIE_INFO = 'GET_MOVIE_INFO';\nexport const SIGN_IN = 'SIGN_IN';\nexport const SIGN_OUT = 'SIGN_OUT';\nexport const SIGN_UP = 'SIGN_UP';\nexport const GET_SETTINGS = 'GET_SETTINGS';\nexport const UPDATE_SETTINGS = 'UPDATE_SETTINGS';\nexport const SHOW_NOTIFICATION = 'SHOW_NOTIFICATION';\nexport const HIDE_NOTIFICATION = 'HIDE_NOTIFICATION';\nexport const API_REQUEST_STARTED = 'API_REQUEST_STARTED';\nexport const API_REQUEST_ENDED = 'API_REQUEST_ENDED';\nexport const DB_REQUEST_STARTED = 'DB_REQUEST_STARTED';\nexport const DB_REQUEST_ENDED = 'DB_REQUEST_ENDED';\nexport const SHOW_MODAL = 'SHOW_MODAL';\nexport const HIDE_MODAL = 'HIDE_MODAL';\n","/* eslint-disable function-paren-newline */\n/* eslint-disable comma-dangle */\n/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable no-confusing-arrow */\nimport { sortArrayOfObjects } from 'assets/utils';\nimport {\n  ADD_ITEM,\n  REMOVE_ITEM,\n  GET_ITEMS,\n  SORT_MOVIES,\n  UPDATE_ITEM,\n  SIGN_OUT,\n} from '../action-types';\n\nconst initialState = [];\n\nexport const data = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case ADD_ITEM:\n      return [...state, payload];\n\n    case UPDATE_ITEM:\n      if (state.filter((item) => item.id === payload.id).length) {\n        return state.map((item) =>\n          item.id === payload.id ? { ...item, ...payload } : item\n        );\n      }\n      return [...state, payload];\n\n    case REMOVE_ITEM:\n      return state.filter((item) => item.id !== payload);\n\n    case GET_ITEMS:\n      return [...payload];\n\n    case SORT_MOVIES:\n      switch (payload) {\n        case 'title-asc':\n          return sortArrayOfObjects(state, 'Title', 'asc');\n        case 'title-dsc':\n          return sortArrayOfObjects(state, 'Title', 'dsc');\n        case 'year-asc':\n          return sortArrayOfObjects(state, 'Year', 'asc');\n        case 'year-dsc':\n          return sortArrayOfObjects(state, 'Year', 'dsc');\n        default:\n          return state;\n      }\n\n    case SIGN_OUT:\n      return [];\n\n    default:\n      return state;\n  }\n};\n","import {\n  GET_MOVIE_INFO,\n  API_REQUEST_STARTED,\n  API_REQUEST_ENDED,\n} from '../action-types';\n\nconst initialState = { data: {}, isLoading: false };\n\nexport const movieInfo = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_MOVIE_INFO:\n      return { ...state, data: payload };\n    case API_REQUEST_STARTED:\n      return { ...state, isLoading: true };\n    case API_REQUEST_ENDED:\n      return { ...state, isLoading: false };\n    default:\n      return state;\n  }\n};\n","import { SEARCH_MOVIE } from '../action-types';\n\nconst initialState = [];\n\nexport const searchResults = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SEARCH_MOVIE:\n      return [...payload];\n\n    default:\n      return state;\n  }\n};\n","import { SIGN_IN, SIGN_OUT } from '../action-types';\n\nconst initialState = { uid: null, isLogged: false };\n\nexport const user = (state = initialState, action) => {\n  switch (action.type) {\n    case SIGN_IN:\n      return { uid: action.payload.uid, email: action.payload.email, isLogged: true };\n\n    case SIGN_OUT:\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n","import { API_REQUEST_ENDED, API_REQUEST_STARTED } from '../action-types';\n\nconst initialState = { error: '', isLoading: false };\n\nexport const api = (state = initialState, action) => {\n  const { type } = action;\n  switch (type) {\n    case API_REQUEST_STARTED:\n      return { ...state, isLoading: true };\n    case API_REQUEST_ENDED:\n      return { ...state, isLoading: false };\n    default:\n      return state;\n  }\n};\n","import { GET_SETTINGS, UPDATE_SETTINGS } from '../action-types';\n\nconst initialState = { language: 'en', theme: 'light' };\n\nexport const settings = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_SETTINGS:\n    case UPDATE_SETTINGS:\n      return { ...state, ...payload };\n\n    default:\n      return state;\n  }\n};\n","import { SHOW_MODAL, HIDE_MODAL } from '../action-types';\n\nconst initialState = {\n  auth: { isVisible: false, data: null },\n  fav: { isVisible: false, data: null },\n};\n\nexport const modals = (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case SHOW_MODAL:\n      return {\n        ...state,\n        [payload.modalName]: {\n          isVisible: true,\n          data: payload.data,\n        },\n      };\n\n    case HIDE_MODAL:\n      return {\n        ...state,\n        [payload]: { isVisible: false },\n      };\n    default:\n      return state;\n  }\n};\n","import { SHOW_NOTIFICATION, HIDE_NOTIFICATION } from '../action-types';\n\nconst initialState = { type: '', message: '' };\n\nexport const notifications = (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_NOTIFICATION:\n      return {\n        ...state,\n        type: action.payload.type,\n        message: action.payload.message,\n      };\n    case HIDE_NOTIFICATION:\n      return initialState;\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { data } from './_data';\nimport { movieInfo } from './_movie-info';\nimport { searchResults } from './_search-results';\nimport { user } from './_user';\nimport { api } from './_api';\nimport { settings } from './_settings';\nimport { modals } from './_modals';\nimport { notifications } from './_notifications';\n\nconst rootReducer = combineReducers({\n  data,\n  movieInfo,\n  searchResults,\n  user,\n  settings,\n  api,\n  modals,\n  notifications,\n});\n\nexport default rootReducer;\n","/* eslint-disable object-curly-newline */\n/* eslint-disable comma-dangle */\n/* eslint-disable-next-line object-curly-newline */\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { ls } from 'services';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst persistedState = ls.loadState();\nconst composeTools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  rootReducer,\n  persistedState,\n  composeTools(applyMiddleware(thunk))\n);\nstore.subscribe(() => {\n  const { data, user, settings } = store.getState();\n  ls.saveState({\n    data,\n    user,\n    settings,\n  });\n});\n\nexport default store;\n","/* eslint-disable react/button-has-type */\nimport PropTypes from 'prop-types';\nimport './UIButton.scss';\n\nconst UIButton = (props) => {\n  const {\n    onClick, extraClassName, type, btnType, size, text,\n  } = props;\n  const buttonClassName = `ui-button ui-button--${btnType} ui-button--${size} ${extraClassName}`;\n\n  return (\n    <button type={type} className={buttonClassName} onClick={onClick}>\n      {text}\n    </button>\n  );\n};\n\nUIButton.defaultProps = {\n  extraClassName: '',\n  onClick: null,\n  size: 'normal',\n  type: 'button',\n  btnType: 'default',\n  text: 'Some Text',\n};\n\nUIButton.propTypes = {\n  extraClassName: PropTypes.string,\n  onClick: PropTypes.func,\n  size: PropTypes.string,\n  type: PropTypes.string,\n  btnType: PropTypes.string,\n  text: PropTypes.string,\n};\n\nexport { UIButton };\n","/* eslint-disable react/button-has-type */\nimport PropTypes from 'prop-types';\n\nimport './UIIconButton.scss';\n\nconst UIIconButton = (props) => {\n  const {\n    icon, onClick, extraClassName, title, type,\n  } = props;\n  const buttonClassName = extraClassName ? `ui-icon-button icon-${icon} ${extraClassName}` : `ui-icon-button icon-${icon}`;\n\n  return (\n    <button type={type} className={buttonClassName} onClick={onClick} title={title}>\n      <span className=\"ui-icon-button__text\">{title}</span>\n    </button>\n  );\n};\n\nUIIconButton.defaultProps = {\n  icon: '',\n  extraClassName: '',\n  title: 'Click me',\n  onClick: null,\n  type: 'button',\n};\n\nUIIconButton.propTypes = {\n  icon: PropTypes.string,\n  onClick: PropTypes.func,\n  extraClassName: PropTypes.string,\n  title: PropTypes.string,\n  type: PropTypes.string,\n};\n\nexport { UIIconButton };\n","/* eslint-disable jsx-a11y/no-autofocus */\nimport PropTypes from 'prop-types';\n\nimport './UIInput.scss';\n\nconst UIInput = (props) => {\n  const {\n    type, name, value, onChange, extraClassName, placeholder, required, autofocus,\n  } = props;\n  const componentClassName = extraClassName ? `ui-input ${extraClassName}` : 'ui-input';\n\n  return (\n    <input\n      type={type}\n      name={name}\n      value={value}\n      className={componentClassName}\n      onChange={onChange}\n      placeholder={placeholder}\n      required={required}\n      autoFocus={autofocus}\n    />\n  );\n};\n\nUIInput.defaultProps = {\n  extraClassName: '',\n  onChange: null,\n  value: '',\n  type: 'text',\n  name: 'ui-input',\n  placeholder: '',\n  required: false,\n  autofocus: false,\n};\n\nUIInput.propTypes = {\n  type: PropTypes.string,\n  name: PropTypes.string,\n  extraClassName: PropTypes.string,\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n  placeholder: PropTypes.string,\n  required: PropTypes.bool,\n  autofocus: PropTypes.bool,\n};\n\nexport { UIInput };\n","import PropTypes from 'prop-types';\n\nimport './UISelect.scss';\n\nconst UISelect = (props) => {\n  const {\n    value, onChange, options, extraClassName, title, required,\n  } = props;\n  const className = extraClassName ? `ui-select ${extraClassName}` : 'ui-select';\n\n  return (\n    <select\n      onChange={onChange}\n      value={value}\n      required={required}\n      className={className}\n      title={title}\n    >\n      {options.map((option) => (\n        <option\n          key={option.value}\n          value={option.value}\n          disabled={option.disabled}\n          className=\"ui-select__option\"\n        >\n          {option.label}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nUISelect.defaultProps = {\n  extraClassName: '',\n  onChange: null,\n  value: '',\n  title: 'Select me',\n  options: [\n    {\n      value: 'opt1',\n      label: 'Option 1',\n    },\n    {\n      value: 'opt2',\n      label: 'Option 2',\n    },\n    {\n      value: 'opt3',\n      label: 'Option 3',\n    },\n  ],\n  required: false,\n};\n\nUISelect.propTypes = {\n  extraClassName: PropTypes.string,\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n  title: PropTypes.string,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.string,\n      label: PropTypes.string,\n      disabled: PropTypes.bool,\n    }),\n  ),\n  required: PropTypes.bool,\n};\n\nexport { UISelect };\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './UITabs.scss';\n\nconst UITabs = (props) => {\n  const {\n    extraClassName, labels, children, activeTab, onTabClick,\n  } = props;\n  const tabsClassName = `ui-tabs ${extraClassName}`;\n  const [activeTabIndex, setActiveTabIndex] = useState(activeTab);\n\n  function handleTabClick(e) {\n    setActiveTabIndex(labels.indexOf(e.target.value));\n    if (onTabClick) {\n      onTabClick();\n    }\n  }\n  function setTabClass(index) {\n    return index === activeTabIndex ? 'ui-tabs__item ui-tabs__item--active' : 'ui-tabs__item';\n  }\n\n  return (\n    <div className={tabsClassName}>\n      <ol className=\"ui-tabs__list\">\n        {labels.map((label, index) => (\n          <li key={label} className={setTabClass(index)}>\n            <input\n              className=\"ui-tabs__btn\"\n              type=\"button\"\n              onClick={handleTabClick}\n              value={label}\n            />\n          </li>\n        ))}\n      </ol>\n      <div className=\"ui-tabs__content\">\n        {children.map((child, index) => (index !== activeTabIndex ? null : child))}\n      </div>\n    </div>\n  );\n};\n\nUITabs.defaultProps = {\n  extraClassName: '',\n  activeTab: 0,\n  labels: [],\n  children: null,\n  onTabClick: null,\n};\n\nUITabs.propTypes = {\n  extraClassName: PropTypes.string,\n  labels: PropTypes.arrayOf(PropTypes.string),\n  activeTab: PropTypes.number,\n  children: PropTypes.node,\n  onTabClick: PropTypes.func,\n};\n\nexport { UITabs };\n","/* eslint-disable function-paren-newline */\n/* eslint-disable comma-dangle */\n/* eslint-disable implicit-arrow-linebreak */\nimport { createSelector } from 'reselect';\n\nconst getData = (state) => state.data;\nconst getIsUserLogged = (state) => state.user.isLogged;\nconst getUserId = (state) => state.user.uid;\nconst getIsAuthModalVisible = (state) => state.modals.auth.isVisible;\nconst getIsFavModalVisible = (state) => state.modals.fav.isVisible;\nconst getAppLanguage = (state) => state.settings.language;\nconst getAppTheme = (state) => state.settings.theme;\nconst getSearchResults = (state) => state.searchResults;\nconst getMovieInfo = (state) => state.movieInfo;\nconst getNotifications = (state) => state.notifications;\n\nconst findById = (data, id) => data.find((item) => item.imdbID === id);\n\nconst getMovieById = createSelector(getData, (_, id) => id, findById);\nconst getSearchResultById = createSelector(\n  getSearchResults,\n  (_, id) => id,\n  findById\n);\n\nconst getMoviesByList = createSelector(\n  getData,\n  (_, list) => list,\n  (data, list) => data.filter((item) => item.lists.includes(list))\n);\n\nexport {\n  getData,\n  getIsUserLogged,\n  getIsAuthModalVisible,\n  getIsFavModalVisible,\n  getAppLanguage,\n  getAppTheme,\n  getSearchResults,\n  getUserId,\n  getMovieInfo,\n  getNotifications,\n  getMovieById,\n  getSearchResultById,\n  getMoviesByList,\n};\n","const languages = [\n  { value: 'en', label: 'EN' },\n  { value: 'ua', label: 'UA' },\n  { value: 'ru', label: 'RU' },\n];\n\nconst translations = {\n  en: {\n    SIGN_IN: 'Sign In',\n    SIGN_UP: 'Sign Up',\n    SIGN_OUT: 'Sign Out',\n    SEARCH_MOVIE: 'Search',\n    SEARCH_MOVIE_PLACEHOLDER: 'Enter movie title',\n    AUTHENIFICATION: 'Authenification',\n    YOUR_EMAIL: 'Your email',\n    YOUR_PASSWORD: 'Your password',\n    CREATE_AN_ACCOUNT: 'Create an Account',\n    CONNECT_WITH: 'or connect with',\n    TOGGLE_THEME: 'Change theme',\n    TOGGLE_LANGUAGE: 'Change language',\n    MOVIE_INFO: 'Movie info',\n    HOME: 'Home',\n    FAVOURITES: 'Favourites',\n    WATCH_LATER: 'Watch later',\n    WATCHED: 'Watched',\n    GENRE: 'Genre',\n    CAST: 'Cast',\n    DIRECTOR: 'Director',\n    COUNTRY: 'Country',\n    DURATION: 'Duration',\n    RELEASE: 'Release',\n    RATING: 'Rating',\n    CLOSE: 'Close',\n    SORT_MOVIES: 'Sort',\n    SORT_BY_TITLE_A_Z: 'Title A-Z',\n    SORT_BY_TITLE_Z_A: 'Title Z-A',\n    SORT_BY_YEAR_ASC: 'Year ↑',\n    SORT_BY_YEAR_DSC: 'Year ↓',\n  },\n  ua: {\n    SIGN_IN: 'Увійти',\n    SIGN_UP: 'Зареєструватись',\n    SIGN_OUT: 'Вийти',\n    SEARCH_MOVIE: 'Шукати',\n    SEARCH_MOVIE_PLACEHOLDER: 'Введіть назву фільма',\n    AUTHENIFICATION: 'Аутеніфікація',\n    YOUR_EMAIL: 'Ваш email',\n    YOUR_PASSWORD: 'Ваш пароль',\n    CREATE_AN_ACCOUNT: 'Створити обліковий запис',\n    CONNECT_WITH: 'або увійти за допомогою',\n    TOGGLE_THEME: 'Змінити тему',\n    TOGGLE_LANGUAGE: 'Змінити мову',\n    MOVIE_INFO: 'Інформація про фільм',\n    HOME: 'Головна',\n    FAVOURITES: 'Улюблене',\n    WATCH_LATER: 'Дивитись пізніше',\n    WATCHED: 'Переглянуте',\n    GENRE: 'Жанр',\n    CAST: 'У ролях',\n    DIRECTOR: 'Режисер',\n    COUNTRY: 'Країна',\n    DURATION: 'Тривалість',\n    RELEASE: 'Рік',\n    RATING: 'Рейтинг',\n    CLOSE: 'Закрити',\n    SORT_MOVIES: 'Сортувати',\n    SORT_BY_TITLE_A_Z: 'Назва А-Я',\n    SORT_BY_TITLE_Z_A: 'Назва Я-А',\n    SORT_BY_YEAR_ASC: 'Рік ↑',\n    SORT_BY_YEAR_DSC: 'Рік ↓',\n  },\n  ru: {\n    SIGN_IN: 'Войти',\n    SIGN_UP: 'Зарегистрироваться',\n    SIGN_OUT: 'Выйти',\n    SEARCH_MOVIE: 'Искать',\n    SEARCH_MOVIE_PLACEHOLDER: 'Введите название фильма',\n    AUTHENIFICATION: 'Аутенификация',\n    YOUR_EMAIL: 'Ваш email',\n    YOUR_PASSWORD: 'Ваш пароль',\n    CREATE_AN_ACCOUNT: 'Создать учетную запись',\n    CONNECT_WITH: 'или войти с помощью',\n    TOGGLE_THEME: 'Изменить тему',\n    TOGGLE_LANGUAGE: 'Изменить язык',\n    MOVIE_INFO: 'Информация о фильме',\n    HOME: 'Главная',\n    FAVOURITES: 'Избранное',\n    WATCH_LATER: 'Смотреть позже',\n    WATCHED: 'Просмотренное',\n    GENRE: 'Жанр',\n    CAST: 'В ролях',\n    DIRECTOR: 'Режиссер',\n    COUNTRY: 'Страна',\n    DURATION: 'Продолжительность',\n    RELEASE: 'Год',\n    RATING: 'Рейтинг',\n    CLOSE: 'Закрыть',\n    SORT_MOVIES: 'Сортировать',\n    SORT_BY_TITLE_A_Z: 'Название А-Я',\n    SORT_BY_TITLE_Z_A: 'Название Я-А',\n    SORT_BY_YEAR_ASC: 'Год ↑',\n    SORT_BY_YEAR_DSC: 'Год ↓',\n  },\n};\n\nexport { translations, languages };\n","/* eslint-disable react/prop-types */\nimport { createContext } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getAppLanguage } from 'store/selectors';\nimport { getLocalization } from 'assets/localization';\n\nconst Localization = createContext();\nLocalization.displayName = 'Localization';\n\nconst LocalizationProvider = ({ children }) => {\n  const language = useSelector(getAppLanguage);\n\n  return (\n    <Localization.Provider value={getLocalization(language)}>\n      {children}\n    </Localization.Provider>\n  );\n};\n\nexport { Localization, LocalizationProvider };\n","import { translations, languages } from './translations';\n\nconst getLocalization = (lang) => translations[lang];\n\nexport { getLocalization, languages };\n","import { createPortal } from 'react-dom';\nimport { useContext } from 'react';\nimport { Localization } from 'contexts';\nimport { useKeypress } from 'hooks';\nimport { UIIconButton } from 'components';\n\nimport './UIModal.scss';\n\nconst UIModal = ({\n  title, isVisible, onClose, children, extraClassName,\n}) => {\n  const STR = useContext(Localization);\n  const componentClassName = extraClassName ? `ui-modal ${extraClassName}` : 'ui-modal';\n  const modalRoot = document.getElementById('modal-root');\n  useKeypress('Escape', onClose);\n\n  return isVisible && createPortal(\n    (\n      <div className=\"ui-modal__backdrop\">\n        <div\n          role=\"dialog\"\n          aria-labelledby=\"ui-modal-title\"\n          aria-modal=\"true\"\n          className={componentClassName}\n        >\n          <div className=\"ui-modal__header\">\n            <h4 id=\"ui-modal-title\" className=\"ui-modal__title\">{title}</h4>\n            <UIIconButton\n              extraClassName=\"ui-modal__btn-close\"\n              icon=\"cancel\"\n              onClick={onClose}\n              title={STR.CLOSE}\n            />\n          </div>\n          <div className=\"ui-modal__content\">{children}</div>\n        </div>\n      </div>\n    ),\n    modalRoot,\n  );\n};\n\nUIModal.defaultProps = {\n  title: 'Modal title',\n  isVisible: false,\n};\n\nexport { UIModal };\n","import { useEffect } from 'react';\n\nfunction useKeypress(key, action) {\n  useEffect(() => {\n    function onKeyup(e) {\n      if (e.key === key) {\n        action();\n      }\n    }\n    window.addEventListener('keyup', onKeyup);\n    return () => {\n      window.removeEventListener('keyup', onKeyup);\n    };\n  }, []);\n}\n\nexport { useKeypress };\n","import PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\nimport { UIIconButton } from 'components';\n\nimport './UINotification.scss';\n\nconst titles = {\n  error: 'Error',\n  warning: 'Warning',\n  success: 'Succes',\n};\n\nconst UINotification = (props) => {\n  const {\n    message, type, extraClassName, isVisible, onCloseClick, autoclose,\n  } = props;\n  const modalRoot = document.getElementById('modal-root');\n  let componentClassName = 'ui-notification';\n  if (type) {\n    componentClassName += ` ui-notification--${type}`;\n  }\n  if (extraClassName) {\n    componentClassName += ` ${extraClassName}`;\n  }\n\n  const timer = (autoclose && isVisible) ? setTimeout(() => onCloseClick(), 3000) : null;\n\n  function handleCloseClick() {\n    clearTimeout(timer);\n    onCloseClick();\n  }\n\n  return isVisible ? createPortal((\n    <div className={componentClassName}>\n      <main className=\"ui-notification__content\">\n        {titles[type] && (<h4 className=\"ui-notification__title\">{titles[type]}</h4>)}\n        <span className=\"ui-notification__message\">{message}</span>\n      </main>\n      <UIIconButton\n        icon=\"cancel\"\n        onClick={handleCloseClick}\n        title=\"Close\"\n        extraClassName=\"ui-notification__close-btn\"\n      />\n    </div>\n  ), modalRoot) : null;\n};\n\nUINotification.defaultProps = {\n  message: 'Info message',\n  type: 'info',\n  extraClassName: '',\n  isVisible: false,\n  onCloseClick: null,\n  autoclose: true,\n};\n\nUINotification.propTypes = {\n  type: PropTypes.string,\n  message: PropTypes.string,\n  extraClassName: PropTypes.string,\n  isVisible: PropTypes.bool,\n  autoclose: PropTypes.bool,\n  onCloseClick: PropTypes.func,\n};\n\nexport { UINotification };\n","/* eslint-disable react/prop-types */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/state-in-constructor */\nimport React from 'react';\n\nimport './ErrorBoundary.scss';\n\nclass ErrorBoundary extends React.Component {\n  state = { error: null, errorInfo: null };\n\n  componentDidCatch(error, errorInfo) {\n    this.setState({\n      error,\n      errorInfo,\n    });\n  }\n\n  render() {\n    const { errorInfo, error } = this.state;\n    if (errorInfo) {\n      return (\n        <div className=\"error-boundary\">\n          <h2 className=\"error-boundary__title\">\n            Sorry. Something went wrong :(\n          </h2>\n          <div className=\"error-boundary__details\">\n            <p>\n              {error && <strong>{error.toString()}</strong>}\n              <br />\n              {errorInfo.componentStack}\n            </p>\n          </div>\n        </div>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nexport { ErrorBoundary };\n","import {\n  NavLink,\n} from 'react-router-dom';\nimport { useContext, useState } from 'react';\nimport { Localization } from 'contexts';\nimport { UIIconButton } from 'components/UI';\n\nimport './Nav.scss';\n\nconst Nav = () => {\n  const STR = useContext(Localization);\n  const [isNavExpanded, toggleNav] = useState(false);\n\n  function handleHideMenuClick() {\n    toggleNav(!isNavExpanded);\n  }\n\n  return (\n    <nav className={isNavExpanded ? 'nav' : 'nav nav--collapsed'}>\n      <div className=\"nav__content\">\n        <ul className=\"nav-links\">\n          <li className=\"nav-links__item\">\n            <NavLink to=\"/\" exact className=\"nav-links__link icon-home\" title={STR.HOME}>\n              {STR.HOME}\n            </NavLink>\n          </li>\n          <li className=\"nav-links__item\">\n            <NavLink to=\"favourites\" className=\"nav-links__link icon-heart\" title={STR.FAVOURITES}>\n              {STR.FAVOURITES}\n            </NavLink>\n          </li>\n          <li className=\"nav-links__item\">\n            <NavLink to=\"watched\" className=\"nav-links__link icon-history\" title={STR.WATCHED}>\n              {STR.WATCHED}\n            </NavLink>\n          </li>\n          <li className=\"nav-links__item\">\n            <NavLink to=\"watch-later\" className=\"nav-links__link icon-clock\" title={STR.WATCH_LATER}>\n              {STR.WATCH_LATER}\n            </NavLink>\n          </li>\n        </ul>\n        <UIIconButton\n          icon={isNavExpanded ? 'left-open' : 'right-open'}\n          onClick={handleHideMenuClick}\n          extraClassName=\"nav__toggler\"\n        />\n      </div>\n    </nav>\n  );\n};\n\nexport { Nav };\n","/* eslint-disable react/prop-types */\nimport './Main.scss';\n\nconst Main = ({ children }) => (\n  <main className=\"main\">\n    <div className=\"main__content\">\n      {children}\n    </div>\n  </main>\n);\n\nexport { Main };\n","import {\n  ThemeToggler, LanguageSelector, AuthBtn, SearchMovieForm,\n} from 'components';\nimport { Link } from 'react-router-dom';\n\nimport './Header.scss';\n\nconst Header = () => (\n  <header className=\"header\">\n    <div className=\"header__content\">\n      <Link to=\"/\" className=\"header__logo\">{process.env.REACT_APP_NAME}</Link>\n      <SearchMovieForm />\n      <div className=\"header__menu\">\n        <LanguageSelector />\n        <ThemeToggler />\n        <AuthBtn />\n      </div>\n    </div>\n  </header>\n);\n\nexport { Header };\n","/* eslint-disable no-unused-vars */\nimport { db, api } from 'services';\nimport {\n  ADD_ITEM,\n  UPDATE_ITEM,\n  REMOVE_ITEM,\n  GET_ITEMS,\n  SORT_MOVIES,\n  SHOW_NOTIFICATION,\n  SEARCH_MOVIE,\n  API_REQUEST_STARTED,\n  API_REQUEST_ENDED,\n  DB_REQUEST_STARTED,\n  DB_REQUEST_ENDED,\n} from '../action-types';\n\nfunction actionError(message) {\n  return {\n    type: SHOW_NOTIFICATION,\n    payload: { type: 'error', message },\n  };\n}\n\nexport const searchMovie = (query) => (dispatch) => {\n  dispatch({ type: API_REQUEST_STARTED });\n  api\n    .searchMovie(query)\n    .then((data) => {\n      if (data?.Search) {\n        dispatch({ type: SEARCH_MOVIE, payload: data.Search });\n      } else {\n        dispatch(actionError(data.Error));\n      }\n    })\n    .catch((error) => dispatch(actionError(error.message)))\n    .finally(() => dispatch({ type: API_REQUEST_ENDED }));\n};\n\nexport const addItem = (uid, data) => (dispatch) => {\n  if (uid) {\n    dispatch({ type: DB_REQUEST_STARTED });\n    db.addItem(uid, data)\n      .then(() => dispatch({ type: ADD_ITEM, payload: data }))\n      .catch((error) => dispatch(actionError(error.message)))\n      .finally(() => dispatch({ type: DB_REQUEST_ENDED }));\n  } else {\n    dispatch({ type: ADD_ITEM, payload: data });\n  }\n};\n\nexport const updateItem = (uid, data) => (dispatch) => {\n  if (uid) {\n    dispatch({ type: DB_REQUEST_STARTED });\n    db.updateItem(uid, data)\n      .then(() => dispatch({ type: UPDATE_ITEM, payload: data }))\n      .catch((error) => dispatch(actionError(error.message)))\n      .finally(() => dispatch({ type: DB_REQUEST_ENDED }));\n  } else {\n    dispatch({ type: UPDATE_ITEM, payload: data });\n  }\n};\n\nexport const removeItem = (uid, id) => (dispatch) => {\n  if (uid) {\n    dispatch({ type: DB_REQUEST_STARTED });\n    db.removeItem(uid, id)\n      .then(() => dispatch({ type: REMOVE_ITEM, payload: id }))\n      .catch((error) => dispatch(actionError(error.message)))\n      .finally(() => dispatch({ type: DB_REQUEST_ENDED }));\n  } else {\n    dispatch({ type: REMOVE_ITEM, payload: id });\n  }\n};\n\nexport const getItems = (uid) => (dispatch) => {\n  dispatch({ type: DB_REQUEST_STARTED });\n  db.getItems(uid)\n    .then((response) => {\n      const data = [];\n      response.forEach((item) => data.push(item.data()));\n      dispatch({ type: GET_ITEMS, payload: data });\n    })\n    .catch((error) => dispatch(actionError(error.message)))\n    .finally(() => dispatch({ type: DB_REQUEST_ENDED }));\n};\n\nexport const sortMovies = (sortedBy) => ({ type: SORT_MOVIES, payload: sortedBy });\n","/* eslint-disable no-unused-vars */\nimport { api } from 'services';\nimport {\n  SHOW_NOTIFICATION,\n  GET_MOVIE_INFO,\n  API_REQUEST_STARTED,\n  API_REQUEST_ENDED,\n} from '../action-types';\n\nfunction actionError(message) {\n  return {\n    type: SHOW_NOTIFICATION,\n    payload: { type: 'error', message },\n  };\n}\n\nexport const getMovieInfo = (id) => (dispatch) => {\n  dispatch({ type: API_REQUEST_STARTED });\n  api\n    .getMovieInfo(id)\n    .then((data) => {\n      if (data) {\n        dispatch({ type: GET_MOVIE_INFO, payload: data });\n      } else {\n        dispatch(actionError(data.Error));\n      }\n    })\n    .catch((error) => dispatch(actionError(error.message)))\n    .finally(() => dispatch({ type: API_REQUEST_ENDED }));\n};\n","import { db, ls } from 'services';\nimport {\n  SIGN_IN,\n  SIGN_OUT,\n  SHOW_NOTIFICATION,\n  DB_REQUEST_STARTED,\n  DB_REQUEST_ENDED,\n} from '../action-types';\n\nfunction actionError(message) {\n  return {\n    type: SHOW_NOTIFICATION,\n    payload: { type: 'error', message },\n  };\n}\n\nfunction actionSignIn(response) {\n  return {\n    type: SIGN_IN,\n    payload: {\n      uid: response.user.uid,\n      email: response.user.email,\n    },\n  };\n}\n\nexport const signUpWithEmail = (email, password) => (dispatch) => {\n  dispatch({ type: DB_REQUEST_STARTED });\n  db.signUpWithEmail(email, password)\n    .then((response) => dispatch(actionSignIn(response)))\n    .catch((error) => dispatch(actionError(error.message)))\n    .finally(() => dispatch({ type: DB_REQUEST_ENDED }));\n};\n\nexport const signInWithEmail = (email, password) => (dispatch) => {\n  dispatch({ type: DB_REQUEST_STARTED });\n  db.signInWithEmail(email, password)\n    .then((response) => dispatch(actionSignIn(response)))\n    .catch((error) => dispatch(actionError(error.message)))\n    .finally(() => dispatch({ type: DB_REQUEST_ENDED }));\n};\n\nexport const signInWithGoogle = () => (dispatch) => {\n  dispatch({ type: DB_REQUEST_STARTED });\n  db.signInWithGoogle()\n    .then((response) => dispatch(actionSignIn(response)))\n    .catch((error) => dispatch(actionError(error.message)))\n    .finally(() => dispatch({ type: DB_REQUEST_ENDED }));\n};\n\nexport const signOut = () => (dispatch) => {\n  dispatch({ type: DB_REQUEST_STARTED });\n  db.signOut()\n    .then(() => dispatch({ type: SIGN_OUT }))\n    .then(() => ls.clearState())\n    .catch((error) => dispatch(actionError(error.message)))\n    .finally(() => dispatch({ type: DB_REQUEST_ENDED }));\n};\n","import { db } from 'services';\nimport {\n  GET_SETTINGS,\n  UPDATE_SETTINGS,\n  SHOW_NOTIFICATION,\n  DB_REQUEST_STARTED,\n  DB_REQUEST_ENDED,\n} from '../action-types';\n\nfunction actionError(message) {\n  return {\n    type: SHOW_NOTIFICATION,\n    payload: { type: 'error', message },\n  };\n}\n\nexport const getSettings = (uid) => (dispatch) => {\n  dispatch({ type: DB_REQUEST_STARTED });\n  db.getSettings(uid)\n    .then((response) => {\n      if (response.data()) {\n        dispatch({ type: GET_SETTINGS, payload: response.data() });\n      }\n    })\n    .catch((error) => dispatch(actionError(error.message)))\n    .finally(() => dispatch({ type: DB_REQUEST_ENDED }));\n};\n\nexport const updateSettings = (uid, data) => (dispatch) => {\n  if (uid) {\n    dispatch({ type: DB_REQUEST_STARTED });\n    db.updateSettings(uid, data)\n      .then(() => dispatch({ type: UPDATE_SETTINGS, payload: data }))\n      .catch((error) => dispatch(actionError(error.message)))\n      .finally(() => dispatch({ type: DB_REQUEST_ENDED }));\n  } else {\n    dispatch({ type: UPDATE_SETTINGS, payload: data });\n  }\n};\n","import { SHOW_MODAL, HIDE_MODAL } from '../action-types';\n\nexport const showModal = (data) => ({\n  type: SHOW_MODAL,\n  payload: data,\n});\n\nexport const hideModal = (modalName) => ({\n  type: HIDE_MODAL,\n  payload: modalName,\n});\n","import React, { useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Localization } from 'contexts';\nimport { useDispatch } from 'react-redux';\nimport { searchMovie } from 'store/actions';\nimport { UIInput, UIIconButton } from 'components';\n\nimport './SearchMovieForm.scss';\n\nconst SearchMovieForm = React.memo(() => {\n  const STR = useContext(Localization);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [query, setQuery] = useState('');\n  const [isFormVisible, setFormVisible] = useState(false);\n\n  function handleSubmit(evt) {\n    if (query) {\n      evt.preventDefault();\n      dispatch(searchMovie(query));\n      history.push('/');\n    }\n  }\n  function handleChange(evt) {\n    setQuery(evt.target.value);\n  }\n  function toggleForm() {\n    setFormVisible(!isFormVisible);\n  }\n\n  return (\n    <div className={`search-movie-form-container${isFormVisible ? ' visible' : ''}`}>\n      <UIIconButton\n        icon=\"left-open\"\n        extraClassName=\"search-movie-form__btn-hide\"\n        onClick={toggleForm}\n      />\n      <form className=\"search-movie-form\" onSubmit={handleSubmit}>\n        <UIInput\n          type=\"search\"\n          value={query}\n          onChange={handleChange}\n          extraClassName=\"search-movie-form__input\"\n          placeholder={STR.SEARCH_MOVIE_PLACEHOLDER}\n          required\n        />\n        <UIIconButton\n          type=\"submit\"\n          icon=\"search\"\n          title={STR.SEARCH_MOVIE}\n          extraClassName=\"search-movie-form__btn\"\n          onClick={handleSubmit}\n        />\n      </form>\n      <UIIconButton\n        icon=\"search\"\n        extraClassName=\"search-movie-form__btn-show\"\n        onClick={toggleForm}\n      />\n    </div>\n  );\n});\n\nexport { SearchMovieForm };\n","import { useState, useContext } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { showModal, getMovieInfo, sortMovies } from 'store/actions';\nimport { getSearchResults, getMoviesByList } from 'store/selectors';\nimport { useLocation } from 'react-router-dom';\nimport { Localization } from 'contexts';\nimport { MovieModal, MovieListItem, MovieListSorter } from 'components';\n\nimport './MovieList.scss';\n\nconst MovieList = () => {\n  const STR = useContext(Localization);\n  const dispatch = useDispatch();\n  const [sortedBy, setSortedBy] = useState('none');\n  const sortOptions = [\n    { value: 'none', label: '— — —', disabled: true },\n    { value: 'title-asc', label: STR.SORT_BY_TITLE_A_Z },\n    { value: 'title-dsc', label: STR.SORT_BY_TITLE_Z_A },\n    { value: 'year-asc', label: STR.SORT_BY_YEAR_ASC },\n    { value: 'year-dsc', label: STR.SORT_BY_YEAR_DSC },\n  ];\n  const list = useLocation().pathname.slice(1);\n  const data = list\n    ? useSelector((state) => getMoviesByList(state, list))\n    : useSelector(getSearchResults);\n\n  function handleShowInfoClick(id) {\n    dispatch(getMovieInfo(id));\n    dispatch(showModal({ modalName: 'fav' }));\n  }\n  function handleMoviesSort(evt) {\n    const sortOption = evt.target.value;\n    dispatch(sortMovies(sortOption));\n    setSortedBy(sortOption);\n  }\n\n  return (\n    <section className=\"movie-list-container\">\n      {(data.length > 0 && list) && (\n        <MovieListSorter\n          options={sortOptions}\n          onChange={handleMoviesSort}\n          title={STR.SORT_MOVIES}\n          value={sortedBy}\n        />\n      )}\n      <ul className=\"movie-list\">\n        {data.map((item) => (\n          <MovieListItem\n            key={item.imdbID}\n            data={item}\n            onShowInfoClick={handleShowInfoClick}\n          />\n        ))}\n      </ul>\n      <MovieModal />\n    </section>\n  );\n};\n\nexport { MovieList };\n","export default __webpack_public_path__ + \"static/media/no-image.fa16a0f2.svg\";","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { MovieMenu } from 'components';\n\nimport noimage from 'assets/images/no-image.svg';\n\nimport './MovieListItem.scss';\n\nconst MovieListItem = React.memo((props) => {\n  const {\n    data: {\n      Title: title, Poster: posterUrl, Year: year, imdbID: id,\n    },\n    onShowInfoClick,\n  } = props;\n  const posterURL = posterUrl !== 'N/A' ? posterUrl : noimage;\n\n  function handleShowInfoClick() {\n    onShowInfoClick(id);\n  }\n\n  return (\n    <li id={id} className=\"movie-list-item\">\n      <MovieMenu id={id} />\n      <img\n        src={posterURL}\n        alt={title}\n        width=\"320\"\n        height=\"480\"\n        className=\"movie-list-item__poster\"\n        onClick={handleShowInfoClick}\n        loading=\"lazy\"\n      />\n      <div className=\"movie-list-item__details\">\n        <span className=\"movie-list-item__title\">{title}</span>\n        <span className=\"movie-list-item__year\">{year}</span>\n      </div>\n    </li>\n  );\n});\n\nMovieListItem.propTypes = {\n  data: PropTypes.shape().isRequired,\n  onShowInfoClick: PropTypes.func.isRequired,\n};\n\nexport { MovieListItem };\n","import PropTypes from 'prop-types';\nimport { UISelect } from 'components';\n\nimport './MovieListSorter.scss';\n\nconst MovieListSorter = (props) => {\n  const {\n    onChange, value, options, title,\n  } = props;\n\n  return (\n    <div className=\"movie-list-sorter\">\n      <span className=\"movie-list-sorter__label\">\n        {title}\n      </span>\n      <UISelect\n        options={options}\n        onChange={onChange}\n        value={value}\n        title={title}\n        extraClassName=\"movie-list-sorter__select\"\n      />\n    </div>\n  );\n};\n\nMovieListSorter.defaultProps = {\n  title: '',\n};\n\nMovieListSorter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.string,\n      label: PropTypes.string,\n    }),\n  ).isRequired,\n  title: PropTypes.string,\n  value: PropTypes.string.isRequired,\n};\n\nexport { MovieListSorter };\n","import './MovieModalSkeleton.scss';\n\nconst MovieModalSkeleton = () => (\n  <div className=\"movie-modal-skeleton\">\n    <div className=\"movie-modal-skeleton__poster skeleton\" />\n    <div className=\"movie-modal-skeleton__details\">\n      <div className=\"movie-modal-skeleton__title skeleton\" />\n      <div className=\"movie-modal-skeleton__plot skeleton\" />\n      <div className=\"movie-modal-skeleton__info skeleton\" />\n    </div>\n  </div>\n);\n\nexport { MovieModalSkeleton };\n","/* eslint-disable react/jsx-one-expression-per-line */\n\nimport PropTypes from 'prop-types';\nimport { useContext } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { hideModal } from 'store/actions';\nimport { getIsFavModalVisible, getMovieInfo } from 'store/selectors';\nimport { Localization } from 'contexts';\nimport { UIModal, MovieMenu } from 'components';\nimport noImage from 'assets/images/no-image.svg';\nimport { MovieModalSkeleton } from './MovieModalSkeleton';\n\nimport './MovieModal.scss';\n\nconst MovieModal = () => {\n  const isVisible = useSelector(getIsFavModalVisible);\n  const {\n    isLoading, data: {\n      Title, Year, Poster, Runtime, Genre, Director, Country, Plot, imdbRating, Actors, imdbID,\n    },\n  } = useSelector(getMovieInfo);\n  const dispatch = useDispatch();\n  const STR = useContext(Localization);\n  const posterSrc = (Poster && Poster !== 'N/A') ? Poster : noImage;\n\n  function handleError(e) {\n    e.target.onerror = null;\n    e.target.src = noImage;\n  }\n  function handleModalClose() {\n    dispatch(hideModal('fav'));\n  }\n\n  return isVisible ? (\n    <UIModal isVisible={isVisible} onClose={handleModalClose} title={STR.MOVIE_INFO} extraClassName=\"movie-modal\">\n      {!isLoading ? (\n        <div className=\"movie-modal__content\">\n          <div className=\"movie-modal__poster\">\n            <img src={posterSrc} alt={Title} width=\"240\" height=\"350\" onError={handleError} />\n            <MovieMenu id={imdbID} />\n          </div>\n          <div className=\"movie-modal__details\">\n            <h4 className=\"movie-modal__title\">{Title}</h4>\n            <p className=\"movie-modal__plot\">{Plot}</p>\n            <ul className=\"movie-modal__info\">\n              <li><strong>{STR.GENRE}:</strong>{Genre}</li>\n              <li><strong>{STR.CAST}:</strong>{Actors}</li>\n              <li><strong>{STR.DIRECTOR}:</strong>{Director}</li>\n              <li><strong>{STR.COUNTRY}:</strong>{Country}</li>\n              <li><strong>{STR.DURATION}:</strong>{Runtime}</li>\n              <li><strong>{STR.RELEASE}:</strong>{Year}</li>\n              <li><strong>{STR.RATING}:</strong>{imdbRating}</li>\n            </ul>\n          </div>\n        </div>\n      ) : <MovieModalSkeleton />}\n    </UIModal>\n  ) : null;\n};\n\nMovieModal.defaultProps = {\n  STR: {\n    MOVIE_INFO: 'Movie info',\n  },\n};\n\nMovieModal.propTypes = {\n  STR: PropTypes.shape({\n    MOVIE_INFO: PropTypes.string,\n  }),\n};\n\nexport { MovieModal };\n","/* eslint-disable react/prop-types */\nimport { useState, useContext } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateItem, removeItem } from 'store/actions';\nimport { getUserId, getMovieById, getSearchResultById } from 'store/selectors';\nimport { Localization } from 'contexts';\nimport { UIIconButton } from 'components';\n\nimport './MovieMenu.scss';\n\nconst MovieMenu = (props) => {\n  const { id } = props;\n  const dispatch = useDispatch();\n  const uid = useSelector(getUserId);\n  const saved = useSelector((state) => getMovieById(state, id));\n  const searched = useSelector((state) => getSearchResultById(state, id));\n  const STR = useContext(Localization);\n  const [isMenuOpened, toggleMenu] = useState(false);\n  const movie = saved || searched;\n  let lists = movie?.lists ? movie.lists : [];\n\n  function handleMenuClick() {\n    toggleMenu(!isMenuOpened);\n  }\n  function handleChange(evt) {\n    const list = evt.target.value;\n    if (lists.includes(list)) {\n      lists = lists.filter((item) => item !== list);\n    } else {\n      lists = [...lists, list];\n    }\n    if (lists.length) {\n      dispatch(updateItem(uid, { ...movie, id, lists }));\n    } else {\n      dispatch(removeItem(uid, id));\n    }\n    toggleMenu(!isMenuOpened);\n  }\n\n  return (\n    <div className=\"movie-menu\">\n      <UIIconButton onClick={handleMenuClick} icon={isMenuOpened ? 'cancel' : 'ellipsis-vert'} extraClassName=\"movie-menu__toggler\" />\n      {isMenuOpened && (\n        <ul className=\"movie-menu__items\">\n          <li className=\"movie-menu__item\">\n            <label htmlFor=\"watch-later\">\n              <input type=\"checkbox\" id=\"watch-later\" value=\"watch-later\" onChange={handleChange} checked={lists.includes('watch-later')} />\n              {STR.WATCH_LATER}\n            </label>\n          </li>\n          <li className=\"movie-menu__item\">\n            <label htmlFor=\"watched\">\n              <input type=\"checkbox\" id=\"watched\" value=\"watched\" onChange={handleChange} checked={lists.includes('watched')} />\n              {STR.WATCHED}\n            </label>\n          </li>\n          <li className=\"movie-menu__item\">\n            <label htmlFor=\"favourites\">\n              <input type=\"checkbox\" id=\"favourites\" value=\"favourites\" onChange={handleChange} checked={lists.includes('favourites')} />\n              {STR.FAVOURITES}\n            </label>\n          </li>\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport { MovieMenu };\n","import { useContext } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Localization } from 'contexts';\nimport { updateSettings } from 'store/actions';\nimport { getAppLanguage, getUserId } from 'store/selectors';\nimport { languages } from 'assets/localization';\nimport { UISelect } from 'components';\n\nimport './LanguageSelector.scss';\n\nconst LanguageSelector = () => {\n  const dispatch = useDispatch();\n  const STR = useContext(Localization);\n  const currLang = useSelector(getAppLanguage);\n  const uid = useSelector(getUserId);\n\n  function handleLanguageChange(evt) {\n    const language = evt.target.value;\n    dispatch(updateSettings(uid, { language }));\n  }\n\n  return (\n    <UISelect\n      value={currLang}\n      onChange={handleLanguageChange}\n      options={languages}\n      extraClassName=\"language-selector\"\n      title={STR.TOGGLE_LANGUAGE}\n    />\n  );\n};\n\nexport { LanguageSelector };\n","import { useContext } from 'react';\nimport { Localization } from 'contexts';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateSettings } from 'store/actions';\nimport { getUserId, getAppTheme } from 'store/selectors';\nimport { UIIconButton } from 'components';\n\nconst ThemeToggler = () => {\n  const STR = useContext(Localization);\n  const dispatch = useDispatch();\n  const theme = useSelector(getAppTheme);\n  const uid = useSelector(getUserId);\n  const btnIcon = theme === 'light' ? 'moon' : 'sun';\n\n  function handleThemeChange() {\n    const newTheme = theme === 'light' ? 'dark' : 'light';\n    dispatch(updateSettings(uid, { theme: newTheme }));\n  }\n\n  return (\n    <UIIconButton\n      icon={btnIcon}\n      onClick={handleThemeChange}\n      title={STR.TOGGLE_THEME}\n    />\n  );\n};\n\nexport { ThemeToggler };\n","import { useContext } from 'react';\nimport { Localization } from 'contexts';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { showModal, signOut } from 'store/actions';\nimport { getIsUserLogged } from 'store/selectors';\nimport { UIIconButton } from 'components';\n\nconst AuthBtn = () => {\n  const STR = useContext(Localization);\n  const dispatch = useDispatch();\n  const isLogged = useSelector(getIsUserLogged);\n\n  function handleLogInClick() {\n    if (isLogged) {\n      dispatch(signOut());\n    } else {\n      dispatch(showModal({ modalName: 'auth', data: null }));\n    }\n  }\n\n  return (\n    <UIIconButton\n      icon={isLogged ? 'user' : 'user-o'}\n      title={isLogged ? STR.SIGN_OUT : STR.SIGN_IN}\n      onClick={handleLogInClick}\n    />\n  );\n};\n\nexport { AuthBtn };\n","import PropTypes from 'prop-types';\nimport { UIButton, UIInput } from 'components';\n\nimport './SignInForm.scss';\n\nconst SignInForm = (props) => {\n  const {\n    onSubmit,\n    onChange,\n    data: { email, password },\n    STR,\n  } = props;\n\n  return (\n    <form onSubmit={onSubmit} className=\"signin-form\">\n      <UIInput\n        type=\"email\"\n        name=\"email\"\n        value={email}\n        extraClassName=\"signin-form__input\"\n        placeholder={STR.YOUR_EMAIL}\n        onChange={onChange}\n        autofocus\n        required\n      />\n      <UIInput\n        type=\"password\"\n        name=\"password\"\n        extraClassName=\"signin-form__input\"\n        value={password}\n        placeholder={STR.YOUR_PASSWORD}\n        onChange={onChange}\n        required\n      />\n      <div className=\"signin-form__btns\">\n        <UIButton\n          type=\"submit\"\n          btnType=\"primary\"\n          text={STR.SIGN_IN}\n          onClick={onSubmit}\n        />\n      </div>\n    </form>\n  );\n};\n\nSignInForm.defaultProps = {\n  STR: {\n    YOUR_EMAIL: 'Your Email',\n    YOUR_PASSWORD: 'Your password',\n    SIGN_IN: 'Sign In',\n  },\n};\n\nSignInForm.propTypes = {\n  data: PropTypes.shape({\n    email: PropTypes.string,\n    password: PropTypes.string,\n  }).isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  STR: PropTypes.shape({\n    YOUR_EMAIL: PropTypes.string,\n    YOUR_PASSWORD: PropTypes.string,\n    SIGN_IN: PropTypes.string,\n  }),\n};\n\nexport { SignInForm };\n","import PropTypes from 'prop-types';\nimport { UIButton, UIInput } from 'components';\n\nimport './SignUpForm.scss';\n\nconst SignUpForm = (props) => {\n  const {\n    onSubmit,\n    onChange,\n    data: { email, password },\n    STR,\n  } = props;\n\n  return (\n    <form onSubmit={onSubmit} className=\"signup-form\">\n      <UIInput\n        type=\"email\"\n        name=\"email\"\n        value={email}\n        extraClassName=\"signup-form__input\"\n        placeholder={STR.YOUR_EMAIL}\n        onChange={onChange}\n        required\n      />\n      <UIInput\n        type=\"password\"\n        name=\"password\"\n        value={password}\n        extraClassName=\"signup-form__input\"\n        placeholder={STR.YOUR_PASSWORD}\n        onChange={onChange}\n        required\n      />\n      <div className=\"signup-form__btns\">\n        <UIButton\n          type=\"submit\"\n          btnType=\"primary\"\n          text={STR.CREATE_AN_ACCOUNT}\n          onClick={onSubmit}\n        />\n      </div>\n    </form>\n  );\n};\n\nSignUpForm.defaultProps = {\n  STR: {\n    YOUR_EMAIL: 'Your Email',\n    YOUR_PASSWORD: 'Your password',\n    CREATE_AN_ACCOUNT: 'Create an account',\n  },\n};\n\nSignUpForm.propTypes = {\n  data: PropTypes.shape({\n    email: PropTypes.string,\n    password: PropTypes.string,\n  }).isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  STR: PropTypes.shape({\n    YOUR_EMAIL: PropTypes.string,\n    YOUR_PASSWORD: PropTypes.string,\n    CREATE_AN_ACCOUNT: PropTypes.string,\n  }),\n};\n\nexport { SignUpForm };\n","import PropTypes from 'prop-types';\nimport { UIIconButton } from 'components';\n\nimport './SocialLogInForm.scss';\n\nconst SocialLogInForm = (props) => {\n  const { onSignInWithGoogle, STR } = props;\n\n  return (\n    <div className=\"social-login\">\n      <div className=\"social-login__label\">{STR.CONNECT_WITH}</div>\n      <div className=\"social-login__btns\">\n        <UIIconButton\n          icon=\"google\"\n          onClick={onSignInWithGoogle}\n          extraClassName=\"social-login__btn\"\n        />\n      </div>\n    </div>\n  );\n};\nSocialLogInForm.defaultProps = {\n  STR: { CONNECT_WITH: 'or connect with' },\n};\n\nSocialLogInForm.propTypes = {\n  onSignInWithGoogle: PropTypes.func.isRequired,\n  STR: PropTypes.shape({ CONNECT_WITH: PropTypes.string }),\n};\n\nexport { SocialLogInForm };\n","/* eslint-disable no-unused-vars */\nimport { useContext, useState, useEffect } from 'react';\nimport { Localization } from 'contexts';\nimport { UITabs, UIModal } from 'components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  signInWithEmail, signInWithGoogle, signUpWithEmail, hideModal,\n} from 'store/actions';\nimport { getIsUserLogged, getIsAuthModalVisible } from 'store/selectors';\nimport { SignInForm } from './SignInForm';\nimport { SignUpForm } from './SignUpForm';\nimport { SocialLogInForm } from './SocialLogInForm';\n\nimport './AuthModal.scss';\n\nconst AuthModal = () => {\n  const STR = useContext(Localization);\n  const dispatch = useDispatch();\n  const isLogged = useSelector(getIsUserLogged);\n  const isModalVisible = useSelector(getIsAuthModalVisible);\n  const initialFormData = { email: '', password: '' };\n  const [formData, setFormData] = useState(initialFormData);\n  useEffect(() => {\n    if (isLogged) {\n      setFormData(initialFormData);\n      dispatch(hideModal('auth'));\n    }\n  }, [isLogged]);\n  function onModalClose() {\n    setFormData(initialFormData);\n    dispatch(hideModal('auth'));\n  }\n  function onSignIn(event) {\n    if (formData.email && formData.password) {\n      event.preventDefault();\n      dispatch(signInWithEmail(formData.email, formData.password));\n    }\n  }\n  function onSignInWithGoogle() {\n    dispatch(signInWithGoogle());\n  }\n  function onSignUp(event) {\n    if (formData.email && formData.password) {\n      event.preventDefault();\n      dispatch(signUpWithEmail(formData.email, formData.password));\n    }\n  }\n  function onFormChange(event) {\n    const { name, value } = event.target;\n    setFormData({ ...formData, [name]: value });\n  }\n  function onFormReset() {\n    setFormData(initialFormData);\n  }\n\n  return isModalVisible ? (\n    <UIModal isVisible={isModalVisible} onClose={onModalClose} title={STR.AUTHENIFICATION}>\n      <UITabs labels={[STR.SIGN_IN, STR.SIGN_UP]} extraClassName=\"auth-form__tabs\" onTabClick={onFormReset}>\n        <SignInForm\n          onSubmit={onSignIn}\n          onChange={onFormChange}\n          data={formData}\n          STR={STR}\n        />\n        <SignUpForm\n          onSubmit={onSignUp}\n          onChange={onFormChange}\n          data={formData}\n          STR={STR}\n        />\n      </UITabs>\n      <SocialLogInForm\n        onSignInWithGoogle={onSignInWithGoogle}\n        STR={STR}\n      />\n    </UIModal>\n  )\n    : null;\n};\n\nexport { AuthModal };\n","import { useSelector, useDispatch } from 'react-redux';\nimport { UINotification } from 'components';\nimport { hideNotification } from 'store/actions';\nimport { getNotifications } from 'store/selectors';\n\nconst NotificationService = () => {\n  const dispatch = useDispatch();\n  const { message, type } = useSelector(getNotifications);\n  const isVisible = !!message;\n\n  function handleCloseClick() {\n    dispatch(hideNotification());\n  }\n\n  return (\n    <UINotification\n      isVisible={isVisible}\n      type={type}\n      message={message}\n      onCloseClick={handleCloseClick}\n    />\n  );\n};\n\nexport { NotificationService };\n","import { SHOW_NOTIFICATION, HIDE_NOTIFICATION } from '../action-types';\n\nexport const showNotification = (data) => ({\n  type: SHOW_NOTIFICATION,\n  payload: data,\n});\n\nexport const hideNotification = () => ({\n  type: HIDE_NOTIFICATION,\n});\n","import {\n  Nav, Main, Header,\n} from 'components';\nimport PropTypes from 'prop-types';\n\nconst BaseLayout = ({ children }) => (\n  <div className=\"container\">\n    <Header />\n    <Nav />\n    <Main>\n      {children}\n    </Main>\n  </div>\n);\n\nBaseLayout.defaultProps = {\n  children: null,\n};\n\nBaseLayout.propTypes = {\n  children: PropTypes.node,\n};\n\nexport { BaseLayout };\n","import { MovieList } from 'components';\nimport { BaseLayout } from 'layouts';\n\nconst Home = () => (\n  <BaseLayout>\n    <MovieList />\n  </BaseLayout>\n);\n\nexport { Home };\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getItems, getSettings } from 'store/actions';\nimport { getUserId, getIsUserLogged, getAppTheme } from 'store/selectors';\nimport { AuthModal, NotificationService } from 'components';\nimport { Home } from 'pages';\nimport { HashRouter as Router } from 'react-router-dom';\n\nconst App = () => {\n  const uid = useSelector(getUserId);\n  const isLogged = useSelector(getIsUserLogged);\n  const theme = useSelector(getAppTheme);\n  document.documentElement.setAttribute('data-theme', theme);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (isLogged) {\n      dispatch(getItems(uid));\n      dispatch(getSettings(uid));\n    }\n  }, [isLogged]);\n\n  return (\n    <>\n      <Router>\n        <Home />\n      </Router>\n      <AuthModal />\n      <NotificationService />\n    </>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from 'store';\nimport { ErrorBoundary } from 'components';\nimport { LocalizationProvider } from 'contexts';\n\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <ErrorBoundary>\n      <LocalizationProvider>\n        <App />\n      </LocalizationProvider>\n    </ErrorBoundary>\n  </Provider>, document.getElementById('root'),\n);\n"],"sourceRoot":""}