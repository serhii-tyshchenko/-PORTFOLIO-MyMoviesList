{"version":3,"sources":["services/db/firebase.js","services/api/omdb.js","services/db/ls.js","services/index.js","assets/utils/index.js","store/action-types.js","store/reducers/_data.js","store/reducers/_movie-info.js","store/reducers/_search-results.js","store/reducers/_user.js","store/reducers/_api.js","store/reducers/_settings.js","store/reducers/_modals.js","store/reducers/_notifications.js","store/reducers/index.js","store/index.js","components/UI/UIButton/UIButton.jsx","components/UI/UIIconButton/UIIconButton.jsx","components/UI/UIInput/UIInput.jsx","components/UI/UISelect/UISelect.jsx","components/UI/UITabs/UITabs.jsx","store/selectors.js","assets/localization/translations.js","contexts/localization.jsx","assets/localization/index.js","components/UI/UIModal/UIModal.jsx","hooks/useKeypress.js","components/UI/UINotification/UINotification.jsx","components/UI/UIDropdown/UIDropdown.jsx","components/ErrorBoundary/ErrorBoundary.jsx","components/Layout/Nav/NavLinks/NavLinksItem/NavLinksItem.jsx","components/Layout/Nav/NavLinks/NavLinks.jsx","components/Layout/Nav/Nav.jsx","components/Layout/Main/Main.jsx","components/Layout/Header/Header.jsx","store/actions/_data.js","store/actions/_user.js","store/actions/_settings.js","store/actions/_modals.js","components/Movie/SearchMovieForm/SearchMovieForm.jsx","components/Movie/MovieList/MovieListTitle/MovieListTitle.jsx","components/Movie/MovieList/MovieList.jsx","components/Movie/MovieListItem/MovieListItem.jsx","components/Movie/MovieListSorter/MovieListSorter.jsx","components/Movie/MovieModal/MovieModalSkeleton/MovieModalSkeleton.jsx","components/Movie/MovieModal/MovieModal.jsx","components/Movie/MovieMenu/MovieMenuItem/MovieMenuItem.jsx","components/Movie/MovieMenu/MovieMenuForm/MovieMenuForm.jsx","components/Movie/MovieMenu/MovieMenu.jsx","components/LanguageSelector/LanguageSelector.jsx","components/ThemeToggler/ThemeToggler.jsx","components/AuthBtn/AuthBtn.jsx","components/AuthModal/SignInForm/SignInForm.jsx","components/AuthModal/SignUpForm/SignUpForm.jsx","components/AuthModal/SocialLogInForm/SocialLogInForm.jsx","components/AuthModal/AuthModal.jsx","components/NotificationService/NotificationService.jsx","store/actions/_notifications.js","layouts/BaseLayout.jsx","pages/Home/Home.jsx","App.jsx","index.jsx"],"names":["firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","constructor","signInWithEmail","email","password","this","auth","signInWithEmailAndPassword","signUpWithEmail","createUserWithEmailAndPassword","signInWithGoogle","firebase","signInWithPopup","GoogleAuthProvider","signOut","addItem","userID","item","dataCollection","db","collection","rootCollection","doc","id","set","updateItem","data","merge","removeItem","itemId","delete","getItems","get","getSettings","settingsCollection","commonSettingsDoc","updateSettings","removeList","list","where","then","querySnapshot","batch","forEach","updatedLists","lists","filter","length","update","ref","commit","initializeApp","firestore","searchMovie","query","fetch","baseUrl","response","json","getMovieInfo","keyName","loadState","serializedState","localStorage","getItem","JSON","parse","err","saveState","state","stringify","setItem","clearState","firebaseService","sortArrayOfObjects","array","parameter","order","sort","a","b","itemA","toUpperCase","itemB","ADD_ITEM","UPDATE_ITEM","REMOVE_ITEM","GET_ITEMS","SORT_MOVIES","REMOVE_LIST","SEARCH_MOVIE","GET_MOVIE_INFO","SIGN_IN","SIGN_OUT","GET_SETTINGS","UPDATE_SETTINGS","SHOW_NOTIFICATION","HIDE_NOTIFICATION","API_REQUEST_STARTED","API_REQUEST_ENDED","DB_REQUEST_STARTED","DB_REQUEST_ENDED","SHOW_MODAL","HIDE_MODAL","initialState","isLoading","uid","isLogged","error","language","theme","userLists","isVisible","fav","type","message","rootReducer","combineReducers","action","payload","map","movie","includes","movieInfo","searchResults","user","settings","api","modals","modalName","notifications","persistedState","ls","composeTools","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","subscribe","getState","UIButton","props","onClick","extraClassName","btnType","size","text","buttonClassName","className","defaultProps","UIIconButton","icon","title","UIInput","name","value","onChange","placeholder","required","autofocus","disabled","componentClassName","autoFocus","UISelect","options","option","label","UITabs","labels","children","activeTab","onTabClick","tabsClassName","activeTabIndex","setActiveTabIndex","useState","handleTabClick","e","indexOf","target","setTabClass","index","child","getData","getIsUserLogged","getUserId","getIsAuthModalVisible","getIsFavModalVisible","getAppLanguage","getAppTheme","getUserLists","getSearchResults","getNotifications","findById","find","imdbID","getMovieById","createSelector","_","getSearchResultById","getMoviesByList","languages","translations","en","SIGN_UP","SEARCH_MOVIE_PLACEHOLDER","AUTHENIFICATION","YOUR_EMAIL","YOUR_PASSWORD","CREATE_AN_ACCOUNT","CONNECT_WITH","TOGGLE_THEME","TOGGLE_LANGUAGE","MOVIE_INFO","HOME","FAVOURITES","WATCH_LATER","WATCHED","GENRE","CAST","DIRECTOR","COUNTRY","DURATION","RELEASE","RATING","CLOSE","SORT_BY_TITLE_A_Z","SORT_BY_TITLE_Z_A","SORT_BY_YEAR_ASC","SORT_BY_YEAR_DSC","ARE_YOU_SURE_YOU_WANT_TO_DELETE_THIS_LIST","EDIT_LIST","SAVE_CHANGES","DELETE_LIST","NEW_LIST","ADD","EXPAND","COLLAPSE","ua","ru","Localization","createContext","displayName","LocalizationProvider","useSelector","Provider","lang","UIModal","onClose","STR","useContext","modalRoot","document","getElementById","key","useEffect","onKeyup","addEventListener","removeEventListener","createPortal","role","aria-labelledby","aria-modal","titles","warning","success","UINotification","onCloseClick","autoclose","timer","setTimeout","clearTimeout","UIDropdown","onToggle","isOpened","menuTogglerIcon","ErrorBoundary","React","Component","errorInfo","componentDidCatch","setState","render","toString","componentStack","NavLinksItem","route","to","exact","NavLinks","Nav","isNavExpanded","toggleNav","predefinedLists","navClassName","Main","Header","ThemeToggler","AuthBtn","formatAPIResponse","Title","Type","year","Year","genre","Genre","poster","Poster","actors","Actors","director","Director","country","Country","duration","Duration","release","Release","imdbRating","runtime","Runtime","plot","Plot","actionError","actionRemoveList","dispatch","Search","actionSearchMovie","Error","catch","finally","actionGetMovieInfo","actionSignIn","showModal","hideModal","SearchMovieForm","memo","useDispatch","history","useHistory","setQuery","isFormVisible","setFormVisible","handleSubmit","evt","preventDefault","push","toggleForm","onSubmit","MovieListTitle","isUserList","onSaveClick","onDeleteClick","listTitle","setListTitle","oldTitle","setOldTitle","isEditMode","setEditMode","confirm","MovieList","sortedBy","setSortedBy","sortOptions","availableLists","useLocation","pathname","slice","some","handleShowInfoClick","newTitle","updatedUserLists","sortOption","sortMovies","onShowInfoClick","MovieListItem","src","alt","width","height","loading","MovieListSorter","MovieModalSkeleton","MovieModal","MovieMenuItem","checked","htmlFor","MovieMenuForm","PropTypes","shape","MovieMenu","saved","searched","isMenuOpened","setMenuOpened","handleMenuItemClick","uuidv4","LanguageSelector","currLang","btnIcon","SignInForm","SignUpForm","SocialLogInForm","onSignInWithGoogle","AuthModal","isModalVisible","initialFormData","formData","setFormData","onFormChange","event","NotificationService","BaseLayout","Home","App","documentElement","setAttribute","ReactDOM"],"mappings":"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","file":"static/js/main.07c7bc63.chunk.js","sourcesContent":["/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable max-len */\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FB_API_KEY,\n  authDomain: process.env.REACT_APP_FB_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FB_DATABASE_URL,\n  projectId: process.env.REACT_APP_FB_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FB_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FB_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FB_APP_ID,\n  measurementId: process.env.REACT_APP_FB_MEASUREMENT_ID,\n};\n\nclass Firebase {\n  constructor() {\n    firebase.initializeApp(firebaseConfig);\n    this.auth = firebase.auth();\n    this.db = firebase.firestore();\n\n    this.rootCollection = 'data';\n    this.dataCollection = 'movies';\n    this.settingsCollection = 'settings';\n    this.commonSettingsDoc = 'common';\n  }\n\n  signInWithEmail = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  signUpWithEmail = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  signInWithGoogle = () =>\n    firebase.auth().signInWithPopup(new firebase.auth.GoogleAuthProvider());\n\n  signOut = () => this.auth.signOut();\n\n  addItem = (userID, item, dataCollection = this.dataCollection) =>\n    this.db\n      .collection(this.rootCollection)\n      .doc(userID)\n      .collection(dataCollection)\n      .doc(item.id)\n      .set(item);\n\n  updateItem = (userID, data, dataCollection = this.dataCollection) =>\n    this.db\n      .collection(this.rootCollection)\n      .doc(userID)\n      .collection(dataCollection)\n      .doc(data.id)\n      .set(data, { merge: true });\n\n  removeItem = (userID, itemId, dataCollection = this.dataCollection) =>\n    this.db\n      .collection(this.rootCollection)\n      .doc(userID)\n      .collection(dataCollection)\n      .doc(itemId)\n      .delete();\n\n  getItems = (userID, dataCollection = this.dataCollection) =>\n    this.db\n      .collection(this.rootCollection)\n      .doc(userID)\n      .collection(dataCollection)\n      .get();\n\n  getSettings = (userID) =>\n    this.db\n      .collection(this.rootCollection)\n      .doc(userID)\n      .collection(this.settingsCollection)\n      .doc(this.commonSettingsDoc)\n      .get();\n\n  updateSettings = (userID, data) =>\n    this.db\n      .collection(this.rootCollection)\n      .doc(userID)\n      .collection(this.settingsCollection)\n      .doc(this.commonSettingsDoc)\n      .set(data, { merge: true });\n\n  removeList = (userID, list) =>\n    this.db\n      .collection(this.rootCollection)\n      .doc(userID)\n      .collection(this.dataCollection)\n      .where('lists', 'array-contains', list)\n      .get()\n      .then((querySnapshot) => {\n        const batch = this.db.batch();\n        querySnapshot.forEach((doc) => {\n          const updatedLists = doc.data().lists.filter((item) => item !== list);\n          if (updatedLists.length > 0) {\n            batch.update(doc.ref, {\n              lists: updatedLists,\n            });\n          } else {\n            batch.delete(doc.ref);\n          }\n        });\n        return batch.commit();\n      });\n}\n\nexport default new Firebase();\n","/* eslint-disable implicit-arrow-linebreak */\nconst omdbApiKey = process.env.REACT_APP_OMDB_API_KEY;\n\nclass API {\n  constructor(apiKey) {\n    this.apiKey = apiKey;\n    this.baseUrl = `https://www.omdbapi.com/?apikey=${this.apiKey}`;\n  }\n\n  searchMovie = (query) =>\n    fetch(`${this.baseUrl}&s=${query}`)\n      .then((response) => response.json())\n      .then((data) => data);\n\n  getMovieInfo = (id) =>\n    fetch(`${this.baseUrl}&i=${id}`)\n      .then((response) => response.json())\n      .then((data) => data);\n}\n\nexport default new API(omdbApiKey);\n","const keyName = 'MyMoviesList';\n\nexport const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem(keyName);\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(keyName, serializedState);\n  } catch {\n    // ignore write errors\n  }\n};\n\nexport const clearState = () => {\n  localStorage.removeItem(keyName);\n};\n","import firebaseService from './db/firebase';\nimport api from './api/omdb';\nimport * as ls from './db/ls';\n\nconst db = firebaseService;\nexport { db, ls, api };\n","export function formatDate(date) {\n  const monthNames = [\n    '01',\n    '02',\n    '03',\n    '04',\n    '05',\n    '06',\n    '07',\n    '08',\n    '09',\n    '10',\n    '11',\n    '12',\n  ];\n  const day = date.getDate().toString().padStart(2, '0');\n  const monthIndex = date.getMonth();\n  const year = date.getFullYear();\n\n  return `${year}-${monthNames[monthIndex]}-${day}`;\n}\n\nexport function formatTime(date) {\n  const hours = date.getHours().toString().padStart(2, '0');\n  const minutes = date.getMinutes().toString().padStart(2, '0');\n\n  return `${hours}:${minutes}`;\n}\n\nexport function sortByABC(a, b) {\n  const nameA = a.toUpperCase();\n  const nameB = b.toUpperCase();\n  if (nameA < nameB) {\n    return -1;\n  }\n  if (nameA > nameB) {\n    return 1;\n  }\n  return 0;\n}\n\nexport function sortArrayOfObjects(array, parameter, order = 'asc') {\n  return [\n    ...array.sort((a, b) => {\n      const itemA = a[parameter].toUpperCase();\n      const itemB = b[parameter].toUpperCase();\n      if (itemA < itemB) {\n        return order === 'asc' ? -1 : 1;\n      }\n      if (itemA > itemB) {\n        return order === 'asc' ? 1 : -1;\n      }\n      return 0;\n    }),\n  ];\n}\n","export const ADD_ITEM = 'ADD_ITEM';\nexport const UPDATE_ITEM = 'UPDATE_ITEM';\nexport const REMOVE_ITEM = 'REMOVE_ITEM';\nexport const GET_ITEMS = 'GET_ITEMS';\nexport const SORT_MOVIES = 'SORT_MOVIES';\nexport const REMOVE_LIST = 'REMOVE_LIST';\nexport const SEARCH_MOVIE = 'SEARCH_MOVIE';\nexport const GET_MOVIE_INFO = 'GET_MOVIE_INFO';\nexport const SIGN_IN = 'SIGN_IN';\nexport const SIGN_OUT = 'SIGN_OUT';\nexport const SIGN_UP = 'SIGN_UP';\nexport const GET_SETTINGS = 'GET_SETTINGS';\nexport const UPDATE_SETTINGS = 'UPDATE_SETTINGS';\nexport const SHOW_NOTIFICATION = 'SHOW_NOTIFICATION';\nexport const HIDE_NOTIFICATION = 'HIDE_NOTIFICATION';\nexport const API_REQUEST_STARTED = 'API_REQUEST_STARTED';\nexport const API_REQUEST_ENDED = 'API_REQUEST_ENDED';\nexport const DB_REQUEST_STARTED = 'DB_REQUEST_STARTED';\nexport const DB_REQUEST_ENDED = 'DB_REQUEST_ENDED';\nexport const SHOW_MODAL = 'SHOW_MODAL';\nexport const HIDE_MODAL = 'HIDE_MODAL';\n","/* eslint-disable consistent-return */\n/* eslint-disable array-callback-return */\n/* eslint-disable no-case-declarations */\n/* eslint-disable function-paren-newline */\n/* eslint-disable comma-dangle */\n/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable no-confusing-arrow */\nimport { sortArrayOfObjects } from 'assets/utils';\nimport {\n  ADD_ITEM,\n  REMOVE_ITEM,\n  GET_ITEMS,\n  SORT_MOVIES,\n  UPDATE_ITEM,\n  SIGN_OUT,\n  REMOVE_LIST,\n} from '../action-types';\n\nconst initialState = [];\n\nexport const data = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case ADD_ITEM:\n      return [...state, payload];\n\n    case UPDATE_ITEM:\n      if (state.filter((item) => item.id === payload.id).length) {\n        return state.map((item) =>\n          item.id === payload.id ? { ...item, ...payload } : item\n        );\n      }\n      return [...state, payload];\n\n    case REMOVE_ITEM:\n      return state.filter((item) => item.id !== payload);\n\n    case REMOVE_LIST:\n      const unfilteredMovies = state.filter(\n        (movie) => !movie.lists.includes(payload)\n      );\n      const filteredMovies = state\n        .filter((movie) => movie.lists.includes(payload))\n        .map((movie) => ({\n          ...movie,\n          lists: movie.lists.filter((list) => list !== payload),\n        }))\n        .filter((movie) => movie.lists.length > 0);\n      return [...unfilteredMovies, ...filteredMovies];\n\n    case GET_ITEMS:\n      return [...payload];\n\n    case SORT_MOVIES:\n      switch (payload) {\n        case 'title-asc':\n          return sortArrayOfObjects(state, 'title', 'asc');\n        case 'title-dsc':\n          return sortArrayOfObjects(state, 'title', 'dsc');\n        case 'year-asc':\n          return sortArrayOfObjects(state, 'year', 'asc');\n        case 'year-dsc':\n          return sortArrayOfObjects(state, 'year', 'dsc');\n        default:\n          return state;\n      }\n\n    case SIGN_OUT:\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n","import {\n  GET_MOVIE_INFO,\n  API_REQUEST_STARTED,\n  API_REQUEST_ENDED,\n  SIGN_OUT,\n} from '../action-types';\n\nconst initialState = { data: {}, isLoading: false };\n\nexport const movieInfo = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_MOVIE_INFO:\n      return { ...state, data: payload };\n    case API_REQUEST_STARTED:\n      return { ...state, isLoading: true };\n    case API_REQUEST_ENDED:\n      return { ...state, isLoading: false };\n    case SIGN_OUT:\n      return initialState;\n    default:\n      return state;\n  }\n};\n","import { SEARCH_MOVIE, SIGN_OUT } from '../action-types';\n\nconst initialState = [];\n\nexport const searchResults = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SEARCH_MOVIE:\n      return [...payload];\n    case SIGN_OUT:\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n","import { SIGN_IN, SIGN_OUT } from '../action-types';\n\nconst initialState = { uid: null, isLogged: false };\n\nexport const user = (state = initialState, action) => {\n  switch (action.type) {\n    case SIGN_IN:\n      return { uid: action.payload.uid, email: action.payload.email, isLogged: true };\n\n    case SIGN_OUT:\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n","import {\n  API_REQUEST_ENDED,\n  API_REQUEST_STARTED,\n  SIGN_OUT,\n} from '../action-types';\n\nconst initialState = { error: '', isLoading: false };\n\nexport const api = (state = initialState, action) => {\n  const { type } = action;\n  switch (type) {\n    case API_REQUEST_STARTED:\n      return { ...state, isLoading: true };\n    case API_REQUEST_ENDED:\n      return { ...state, isLoading: false };\n    case SIGN_OUT:\n      return initialState;\n    default:\n      return state;\n  }\n};\n","import { GET_SETTINGS, UPDATE_SETTINGS, SIGN_OUT } from '../action-types';\n\nconst initialState = {\n  language: 'en',\n  theme: 'light',\n  userLists: [],\n};\n\nexport const settings = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_SETTINGS:\n    case UPDATE_SETTINGS:\n      return { ...state, ...payload };\n    case SIGN_OUT:\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n","import { SHOW_MODAL, HIDE_MODAL, SIGN_OUT } from '../action-types';\n\nconst initialState = {\n  auth: { isVisible: false, data: null },\n  fav: { isVisible: false, data: null },\n};\n\nexport const modals = (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case SHOW_MODAL:\n      return {\n        ...state,\n        [payload.modalName]: {\n          isVisible: true,\n          data: payload.data,\n        },\n      };\n    case HIDE_MODAL:\n      return {\n        ...state,\n        [payload]: { isVisible: false },\n      };\n    case SIGN_OUT:\n      return initialState;\n    default:\n      return state;\n  }\n};\n","import {\n  SHOW_NOTIFICATION,\n  HIDE_NOTIFICATION,\n  SIGN_OUT,\n} from '../action-types';\n\nconst initialState = { type: '', message: '' };\n\nexport const notifications = (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_NOTIFICATION:\n      return {\n        ...state,\n        type: action.payload.type,\n        message: action.payload.message,\n      };\n    case HIDE_NOTIFICATION:\n      return initialState;\n    case SIGN_OUT:\n      return initialState;\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { data } from './_data';\nimport { movieInfo } from './_movie-info';\nimport { searchResults } from './_search-results';\nimport { user } from './_user';\nimport { api } from './_api';\nimport { settings } from './_settings';\nimport { modals } from './_modals';\nimport { notifications } from './_notifications';\n\nconst rootReducer = combineReducers({\n  data,\n  movieInfo,\n  searchResults,\n  user,\n  settings,\n  api,\n  modals,\n  notifications,\n});\n\nexport default rootReducer;\n","/* eslint-disable object-curly-newline */\n/* eslint-disable comma-dangle */\n/* eslint-disable-next-line object-curly-newline */\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { ls } from 'services';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst persistedState = ls.loadState();\nconst composeTools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  rootReducer,\n  persistedState,\n  composeTools(applyMiddleware(thunk))\n);\nstore.subscribe(() => {\n  const { data, user, settings } = store.getState();\n  ls.saveState({\n    data,\n    user,\n    settings,\n  });\n});\n\nexport default store;\n","/* eslint-disable react/button-has-type */\nimport PropTypes from 'prop-types';\nimport './UIButton.scss';\n\nconst UIButton = (props) => {\n  const {\n    onClick, extraClassName, type, btnType, size, text,\n  } = props;\n  const buttonClassName = `ui-button ui-button--${btnType} ui-button--${size} ${extraClassName}`;\n\n  return (\n    <button type={type} className={buttonClassName} onClick={onClick}>\n      {text}\n    </button>\n  );\n};\n\nUIButton.defaultProps = {\n  extraClassName: '',\n  onClick: null,\n  size: 'normal',\n  type: 'button',\n  btnType: 'default',\n  text: 'Some Text',\n};\n\nUIButton.propTypes = {\n  extraClassName: PropTypes.string,\n  onClick: PropTypes.func,\n  size: PropTypes.string,\n  type: PropTypes.string,\n  btnType: PropTypes.string,\n  text: PropTypes.string,\n};\n\nexport { UIButton };\n","/* eslint-disable react/button-has-type */\nimport PropTypes from 'prop-types';\n\nimport './UIIconButton.scss';\n\nconst UIIconButton = (props) => {\n  const {\n    icon, onClick, extraClassName, title, type,\n  } = props;\n  const buttonClassName = extraClassName ? `ui-icon-button icon-${icon} ${extraClassName}` : `ui-icon-button icon-${icon}`;\n\n  return (\n    <button type={type} className={buttonClassName} onClick={onClick} title={title}>\n      <span className=\"ui-icon-button__text\">{title}</span>\n    </button>\n  );\n};\n\nUIIconButton.defaultProps = {\n  icon: '',\n  extraClassName: '',\n  title: 'Click me',\n  onClick: null,\n  type: 'button',\n};\n\nUIIconButton.propTypes = {\n  icon: PropTypes.string,\n  onClick: PropTypes.func,\n  extraClassName: PropTypes.string,\n  title: PropTypes.string,\n  type: PropTypes.string,\n};\n\nexport { UIIconButton };\n","/* eslint-disable jsx-a11y/no-autofocus */\nimport PropTypes from 'prop-types';\n\nimport './UIInput.scss';\n\nconst UIInput = (props) => {\n  const {\n    type, name, value, onChange, extraClassName, placeholder, required, autofocus, disabled,\n  } = props;\n  const componentClassName = extraClassName ? `ui-input ${extraClassName}` : 'ui-input';\n\n  return (\n    <input\n      type={type}\n      name={name}\n      value={value}\n      className={componentClassName}\n      onChange={onChange}\n      placeholder={placeholder}\n      required={required}\n      autoFocus={autofocus}\n      disabled={disabled}\n      size={value.length}\n    />\n  );\n};\n\nUIInput.defaultProps = {\n  extraClassName: '',\n  onChange: null,\n  value: '',\n  type: 'text',\n  name: 'ui-input',\n  placeholder: '',\n  required: false,\n  autofocus: false,\n  disabled: false,\n};\n\nUIInput.propTypes = {\n  type: PropTypes.string,\n  name: PropTypes.string,\n  extraClassName: PropTypes.string,\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n  placeholder: PropTypes.string,\n  required: PropTypes.bool,\n  autofocus: PropTypes.bool,\n  disabled: PropTypes.bool,\n};\n\nexport { UIInput };\n","import PropTypes from 'prop-types';\n\nimport './UISelect.scss';\n\nconst UISelect = (props) => {\n  const {\n    value, onChange, options, extraClassName, title, required,\n  } = props;\n  const className = extraClassName ? `ui-select ${extraClassName}` : 'ui-select';\n\n  return (\n    <select\n      onChange={onChange}\n      value={value}\n      required={required}\n      className={className}\n      title={title}\n    >\n      {options.map((option) => (\n        <option\n          key={option.value}\n          value={option.value}\n          disabled={option.disabled}\n          className=\"ui-select__option\"\n        >\n          {option.label}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nUISelect.defaultProps = {\n  extraClassName: '',\n  onChange: null,\n  value: '',\n  title: 'Select me',\n  options: [\n    {\n      value: 'opt1',\n      label: 'Option 1',\n    },\n    {\n      value: 'opt2',\n      label: 'Option 2',\n    },\n    {\n      value: 'opt3',\n      label: 'Option 3',\n    },\n  ],\n  required: false,\n};\n\nUISelect.propTypes = {\n  extraClassName: PropTypes.string,\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n  title: PropTypes.string,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.string,\n      label: PropTypes.string,\n      disabled: PropTypes.bool,\n    }),\n  ),\n  required: PropTypes.bool,\n};\n\nexport { UISelect };\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './UITabs.scss';\n\nconst UITabs = (props) => {\n  const {\n    extraClassName, labels, children, activeTab, onTabClick,\n  } = props;\n  const tabsClassName = `ui-tabs ${extraClassName}`;\n  const [activeTabIndex, setActiveTabIndex] = useState(activeTab);\n\n  function handleTabClick(e) {\n    setActiveTabIndex(labels.indexOf(e.target.value));\n    if (onTabClick) {\n      onTabClick();\n    }\n  }\n  function setTabClass(index) {\n    return index === activeTabIndex ? 'ui-tabs__item ui-tabs__item--active' : 'ui-tabs__item';\n  }\n\n  return (\n    <div className={tabsClassName}>\n      <ol className=\"ui-tabs__list\">\n        {labels.map((label, index) => (\n          <li key={label} className={setTabClass(index)}>\n            <input\n              className=\"ui-tabs__btn\"\n              type=\"button\"\n              onClick={handleTabClick}\n              value={label}\n            />\n          </li>\n        ))}\n      </ol>\n      <div className=\"ui-tabs__content\">\n        {children.map((child, index) => (index !== activeTabIndex ? null : child))}\n      </div>\n    </div>\n  );\n};\n\nUITabs.defaultProps = {\n  extraClassName: '',\n  activeTab: 0,\n  labels: [],\n  children: null,\n  onTabClick: null,\n};\n\nUITabs.propTypes = {\n  extraClassName: PropTypes.string,\n  labels: PropTypes.arrayOf(PropTypes.string),\n  activeTab: PropTypes.number,\n  children: PropTypes.node,\n  onTabClick: PropTypes.func,\n};\n\nexport { UITabs };\n","/* eslint-disable function-paren-newline */\n/* eslint-disable comma-dangle */\n/* eslint-disable implicit-arrow-linebreak */\nimport { createSelector } from 'reselect';\n\nconst getData = (state) => state.data;\nconst getIsUserLogged = (state) => state.user.isLogged;\nconst getUserId = (state) => state.user.uid;\nconst getIsAuthModalVisible = (state) => state.modals.auth.isVisible;\nconst getIsFavModalVisible = (state) => state.modals.fav.isVisible;\nconst getAppLanguage = (state) => state.settings.language;\nconst getAppTheme = (state) => state.settings.theme;\nconst getUserLists = (state) => state.settings.userLists;\nconst getSearchResults = (state) => state.searchResults;\nconst getMovieInfo = (state) => state.movieInfo;\nconst getNotifications = (state) => state.notifications;\n\nconst findById = (data, id) => data.find((item) => item.imdbID === id);\n\nconst getMovieById = createSelector(getData, (_, id) => id, findById);\nconst getSearchResultById = createSelector(\n  getSearchResults,\n  (_, id) => id,\n  findById\n);\n\nconst getMoviesByList = createSelector(\n  getData,\n  (_, list) => list,\n  (data, list) => data.filter((item) => item?.lists.includes(list))\n);\n\nexport {\n  getData,\n  getIsUserLogged,\n  getIsAuthModalVisible,\n  getIsFavModalVisible,\n  getAppLanguage,\n  getAppTheme,\n  getUserLists,\n  getSearchResults,\n  getUserId,\n  getMovieInfo,\n  getNotifications,\n  getMovieById,\n  getSearchResultById,\n  getMoviesByList,\n};\n","const languages = [\n  { value: 'en', label: 'EN' },\n  { value: 'ua', label: 'UA' },\n  { value: 'ru', label: 'RU' },\n];\n\nconst translations = {\n  en: {\n    SIGN_IN: 'Sign In',\n    SIGN_UP: 'Sign Up',\n    SIGN_OUT: 'Sign Out',\n    SEARCH_MOVIE: 'Search',\n    SEARCH_MOVIE_PLACEHOLDER: 'Enter movie title',\n    AUTHENIFICATION: 'Authenification',\n    YOUR_EMAIL: 'Your email',\n    YOUR_PASSWORD: 'Your password',\n    CREATE_AN_ACCOUNT: 'Create an Account',\n    CONNECT_WITH: 'or connect with',\n    TOGGLE_THEME: 'Change theme',\n    TOGGLE_LANGUAGE: 'Change language',\n    MOVIE_INFO: 'Movie info',\n    HOME: 'Home',\n    FAVOURITES: 'Favourites',\n    WATCH_LATER: 'Watch later',\n    WATCHED: 'Watched',\n    GENRE: 'Genre',\n    CAST: 'Cast',\n    DIRECTOR: 'Director',\n    COUNTRY: 'Country',\n    DURATION: 'Duration',\n    RELEASE: 'Release',\n    RATING: 'Rating',\n    CLOSE: 'Close',\n    SORT_MOVIES: 'Sort',\n    SORT_BY_TITLE_A_Z: 'Title A-Z',\n    SORT_BY_TITLE_Z_A: 'Title Z-A',\n    SORT_BY_YEAR_ASC: 'Year ↑',\n    SORT_BY_YEAR_DSC: 'Year ↓',\n    ARE_YOU_SURE_YOU_WANT_TO_DELETE_THIS_LIST:\n      'Are you sure you want to delete this list?',\n    EDIT_LIST: 'Edit list',\n    SAVE_CHANGES: 'Save changes',\n    DELETE_LIST: 'Delete list',\n    NEW_LIST: 'New list',\n    ADD: 'Add',\n    EXPAND: 'Expand',\n    COLLAPSE: 'Collapse',\n  },\n  ua: {\n    SIGN_IN: 'Увійти',\n    SIGN_UP: 'Зареєструватись',\n    SIGN_OUT: 'Вийти',\n    SEARCH_MOVIE: 'Шукати',\n    SEARCH_MOVIE_PLACEHOLDER: 'Введіть назву фільма',\n    AUTHENIFICATION: 'Аутеніфікація',\n    YOUR_EMAIL: 'Ваш email',\n    YOUR_PASSWORD: 'Ваш пароль',\n    CREATE_AN_ACCOUNT: 'Створити обліковий запис',\n    CONNECT_WITH: 'або увійти за допомогою',\n    TOGGLE_THEME: 'Змінити тему',\n    TOGGLE_LANGUAGE: 'Змінити мову',\n    MOVIE_INFO: 'Інформація про фільм',\n    HOME: 'Головна',\n    FAVOURITES: 'Улюблене',\n    WATCH_LATER: 'Дивитись пізніше',\n    WATCHED: 'Переглянуте',\n    GENRE: 'Жанр',\n    CAST: 'У ролях',\n    DIRECTOR: 'Режисер',\n    COUNTRY: 'Країна',\n    DURATION: 'Тривалість',\n    RELEASE: 'Рік',\n    RATING: 'Рейтинг',\n    CLOSE: 'Закрити',\n    SORT_MOVIES: 'Сортувати',\n    SORT_BY_TITLE_A_Z: 'Назва А-Я',\n    SORT_BY_TITLE_Z_A: 'Назва Я-А',\n    SORT_BY_YEAR_ASC: 'Рік ↑',\n    SORT_BY_YEAR_DSC: 'Рік ↓',\n    ARE_YOU_SURE_YOU_WANT_TO_DELETE_THIS_LIST:\n      'Ви дійсно хочете видалити цей список?',\n    EDIT_LIST: 'Редагувати',\n    SAVE_CHANGES: 'Зберегти зміни',\n    DELETE_LIST: 'Видалити список',\n    NEW_LIST: 'Новий список',\n    ADD: 'Додати',\n    EXPAND: 'Показати',\n    COLLAPSE: 'Сховати',\n  },\n  ru: {\n    SIGN_IN: 'Войти',\n    SIGN_UP: 'Зарегистрироваться',\n    SIGN_OUT: 'Выйти',\n    SEARCH_MOVIE: 'Искать',\n    SEARCH_MOVIE_PLACEHOLDER: 'Введите название фильма',\n    AUTHENIFICATION: 'Аутенификация',\n    YOUR_EMAIL: 'Ваш email',\n    YOUR_PASSWORD: 'Ваш пароль',\n    CREATE_AN_ACCOUNT: 'Создать учетную запись',\n    CONNECT_WITH: 'или войти с помощью',\n    TOGGLE_THEME: 'Изменить тему',\n    TOGGLE_LANGUAGE: 'Изменить язык',\n    MOVIE_INFO: 'Информация о фильме',\n    HOME: 'Главная',\n    FAVOURITES: 'Избранное',\n    WATCH_LATER: 'Смотреть позже',\n    WATCHED: 'Просмотренное',\n    GENRE: 'Жанр',\n    CAST: 'В ролях',\n    DIRECTOR: 'Режиссер',\n    COUNTRY: 'Страна',\n    DURATION: 'Продолжительность',\n    RELEASE: 'Год',\n    RATING: 'Рейтинг',\n    CLOSE: 'Закрыть',\n    SORT_MOVIES: 'Сортировать',\n    SORT_BY_TITLE_A_Z: 'Название А-Я',\n    SORT_BY_TITLE_Z_A: 'Название Я-А',\n    SORT_BY_YEAR_ASC: 'Год ↑',\n    SORT_BY_YEAR_DSC: 'Год ↓',\n    ARE_YOU_SURE_YOU_WANT_TO_DELETE_THIS_LIST:\n      'Вы действительно хотите удалить этот список?',\n    EDIT_LIST: 'Редактировать',\n    SAVE_CHANGES: 'Сохранить изменения',\n    DELETE_LIST: 'Удалить список',\n    NEW_LIST: 'Новый список',\n    ADD: 'Добавить',\n    EXPAND: 'Показать',\n    COLLAPSE: 'Скрыть',\n  },\n};\n\nexport { translations, languages };\n","/* eslint-disable react/prop-types */\nimport { createContext } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getAppLanguage } from 'store/selectors';\nimport { getLocalization } from 'assets/localization';\n\nconst Localization = createContext();\nLocalization.displayName = 'Localization';\n\nconst LocalizationProvider = ({ children }) => {\n  const language = useSelector(getAppLanguage);\n\n  return (\n    <Localization.Provider value={getLocalization(language)}>\n      {children}\n    </Localization.Provider>\n  );\n};\n\nexport { Localization, LocalizationProvider };\n","import { translations, languages } from './translations';\n\nconst getLocalization = (lang) => translations[lang];\n\nexport { getLocalization, languages };\n","import { createPortal } from 'react-dom';\nimport { useContext } from 'react';\nimport { Localization } from 'contexts';\nimport { useKeypress } from 'hooks';\nimport { UIIconButton } from 'components';\n\nimport './UIModal.scss';\n\nconst UIModal = ({\n  title, isVisible, onClose, children, extraClassName,\n}) => {\n  const STR = useContext(Localization);\n  const componentClassName = extraClassName ? `ui-modal ${extraClassName}` : 'ui-modal';\n  const modalRoot = document.getElementById('modal-root');\n  useKeypress('Escape', onClose);\n\n  return isVisible && createPortal(\n    (\n      <div className=\"ui-modal__backdrop\">\n        <div\n          role=\"dialog\"\n          aria-labelledby=\"ui-modal-title\"\n          aria-modal=\"true\"\n          className={componentClassName}\n        >\n          <div className=\"ui-modal__header\">\n            <h4 id=\"ui-modal-title\" className=\"ui-modal__title\">{title}</h4>\n            <UIIconButton\n              extraClassName=\"ui-modal__btn-close\"\n              icon=\"cancel\"\n              onClick={onClose}\n              title={STR.CLOSE}\n            />\n          </div>\n          <div className=\"ui-modal__content\">{children}</div>\n        </div>\n      </div>\n    ),\n    modalRoot,\n  );\n};\n\nUIModal.defaultProps = {\n  title: 'Modal title',\n  isVisible: false,\n};\n\nexport { UIModal };\n","import { useEffect } from 'react';\n\nfunction useKeypress(key, action) {\n  useEffect(() => {\n    function onKeyup(e) {\n      if (e.key === key) {\n        action();\n      }\n    }\n    window.addEventListener('keyup', onKeyup);\n    return () => {\n      window.removeEventListener('keyup', onKeyup);\n    };\n  }, []);\n}\n\nexport { useKeypress };\n","import PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\nimport { UIIconButton } from 'components';\n\nimport './UINotification.scss';\n\nconst titles = {\n  error: 'Error',\n  warning: 'Warning',\n  success: 'Succes',\n};\n\nconst UINotification = (props) => {\n  const {\n    message, type, extraClassName, isVisible, onCloseClick, autoclose,\n  } = props;\n  const modalRoot = document.getElementById('modal-root');\n  let componentClassName = 'ui-notification';\n  if (type) {\n    componentClassName += ` ui-notification--${type}`;\n  }\n  if (extraClassName) {\n    componentClassName += ` ${extraClassName}`;\n  }\n\n  const timer = (autoclose && isVisible) ? setTimeout(() => onCloseClick(), 3000) : null;\n\n  function handleCloseClick() {\n    clearTimeout(timer);\n    onCloseClick();\n  }\n\n  return isVisible ? createPortal((\n    <div className={componentClassName}>\n      <main className=\"ui-notification__content\">\n        {titles[type] && (<h4 className=\"ui-notification__title\">{titles[type]}</h4>)}\n        <span className=\"ui-notification__message\">{message}</span>\n      </main>\n      <UIIconButton\n        icon=\"cancel\"\n        onClick={handleCloseClick}\n        title=\"Close\"\n        extraClassName=\"ui-notification__close-btn\"\n      />\n    </div>\n  ), modalRoot) : null;\n};\n\nUINotification.defaultProps = {\n  message: 'Info message',\n  type: 'info',\n  extraClassName: '',\n  isVisible: false,\n  onCloseClick: null,\n  autoclose: true,\n};\n\nUINotification.propTypes = {\n  type: PropTypes.string,\n  message: PropTypes.string,\n  extraClassName: PropTypes.string,\n  isVisible: PropTypes.bool,\n  autoclose: PropTypes.bool,\n  onCloseClick: PropTypes.func,\n};\n\nexport { UINotification };\n","import PropTypes from 'prop-types';\n\nimport { UIIconButton } from 'components';\n\nimport './UIDropdown.scss';\n\nconst UIDropdown = ({\n  children, onToggle, extraClassName, isOpened,\n}) => {\n  const menuTogglerIcon = isOpened ? 'cancel' : 'ellipsis-vert';\n  const componentClassName = extraClassName ? `ui-dropdown ${extraClassName}` : 'ui-dropdown';\n  return (\n    <div className={componentClassName}>\n      <UIIconButton onClick={onToggle} icon={menuTogglerIcon} extraClassName=\"ui-dropdown__toggler\" />\n      {isOpened && (\n        <div className=\"ui-dropdown__container\">\n          {children}\n        </div>\n      )}\n    </div>\n  );\n};\n\nUIDropdown.defaultProps = {\n  extraClassName: '',\n  children: null,\n};\n\nUIDropdown.propTypes = {\n  onToggle: PropTypes.func.isRequired,\n  extraClassName: PropTypes.string,\n  isOpened: PropTypes.bool.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport { UIDropdown };\n","/* eslint-disable react/prop-types */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/state-in-constructor */\nimport React from 'react';\n\nimport './ErrorBoundary.scss';\n\nclass ErrorBoundary extends React.Component {\n  state = { error: null, errorInfo: null };\n\n  componentDidCatch(error, errorInfo) {\n    this.setState({\n      error,\n      errorInfo,\n    });\n  }\n\n  render() {\n    const { errorInfo, error } = this.state;\n    if (errorInfo) {\n      return (\n        <div className=\"error-boundary\">\n          <h2 className=\"error-boundary__title\">\n            Sorry. Something went wrong :(\n          </h2>\n          <div className=\"error-boundary__details\">\n            <p>\n              {error && <strong>{error.toString()}</strong>}\n              <br />\n              {errorInfo.componentStack}\n            </p>\n          </div>\n        </div>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nexport { ErrorBoundary };\n","import PropTypes from 'prop-types';\n\nimport { NavLink } from 'react-router-dom';\n\nimport './NavLinksItem.scss';\n\nconst NavLinksItem = ({ route, icon, title }) => (\n  <li>\n    <NavLink to={route} exact className={`nav-links-item icon-${icon}`} title={title}>\n      {title}\n    </NavLink>\n  </li>\n);\n\nNavLinksItem.defaultProps = {\n  route: '',\n  icon: 'menu',\n  title: 'MyList',\n};\n\nNavLinksItem.propTypes = {\n  route: PropTypes.string,\n  icon: PropTypes.string,\n  title: PropTypes.string,\n};\n\nexport { NavLinksItem };\n","import PropTypes from 'prop-types';\nimport { NavLinksItem } from './NavLinksItem';\n\nimport './NavLinks.scss';\n\nconst NavLinks = ({ data }) => (\n  <ul className=\"nav-links\">\n    {data.map((item) => (\n      <NavLinksItem\n        key={item.id}\n        route={item.id}\n        title={item.title}\n        icon={item.icon}\n      />\n    ))}\n  </ul>\n);\n\nNavLinks.defaultProps = {\n  data: [],\n};\n\nNavLinks.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string,\n    title: PropTypes.string,\n    icon: PropTypes.string,\n  })),\n};\n\nexport { NavLinks };\n","import { useContext, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getUserLists } from 'store/selectors';\nimport { Localization } from 'contexts';\nimport { UIIconButton } from 'components/UI';\nimport { NavLinks } from './NavLinks';\n\nimport './Nav.scss';\n\nconst Nav = () => {\n  const STR = useContext(Localization);\n  const [isNavExpanded, toggleNav] = useState(false);\n  const userLists = useSelector(getUserLists);\n  const predefinedLists = [\n    { id: '/', title: STR.HOME, icon: 'home' },\n    { id: 'favourites', title: STR.FAVOURITES, icon: 'heart' },\n    { id: 'watched', title: STR.WATCHED, icon: 'history' },\n    { id: 'watch-later', title: STR.WATCH_LATER, icon: 'clock' },\n  ];\n  const navClassName = isNavExpanded ? 'nav' : 'nav nav--collapsed';\n\n  function handleToggleNav() {\n    toggleNav(!isNavExpanded);\n  }\n\n  return (\n    <nav className={navClassName}>\n      <div className=\"nav__content\">\n        <NavLinks data={[...predefinedLists, ...userLists]} />\n        <UIIconButton\n          icon={isNavExpanded ? 'left-open' : 'right-open'}\n          onClick={handleToggleNav}\n          title={isNavExpanded ? STR.COLLAPSE : STR.EXPAND}\n          extraClassName=\"nav__toggler\"\n        />\n      </div>\n    </nav>\n  );\n};\n\nexport { Nav };\n","/* eslint-disable react/prop-types */\nimport './Main.scss';\n\nconst Main = ({ children }) => (\n  <main className=\"main\">\n    <div className=\"main__content\">\n      {children}\n    </div>\n  </main>\n);\n\nexport { Main };\n","import {\n  ThemeToggler, LanguageSelector, AuthBtn, SearchMovieForm,\n} from 'components';\nimport { Link } from 'react-router-dom';\n\nimport './Header.scss';\n\nconst Header = () => (\n  <header className=\"header\">\n    <div className=\"header__content\">\n      <Link to=\"/\" className=\"header__logo\">{process.env.REACT_APP_NAME}</Link>\n      <SearchMovieForm />\n      <div className=\"header__menu\">\n        <LanguageSelector />\n        <ThemeToggler />\n        <AuthBtn />\n      </div>\n    </div>\n  </header>\n);\n\nexport { Header };\n","/* eslint-disable object-curly-newline */\nimport { db, api } from 'services';\nimport {\n  ADD_ITEM,\n  UPDATE_ITEM,\n  REMOVE_ITEM,\n  REMOVE_LIST,\n  GET_ITEMS,\n  SORT_MOVIES,\n  SHOW_NOTIFICATION,\n  SEARCH_MOVIE,\n  GET_MOVIE_INFO,\n  API_REQUEST_STARTED,\n  API_REQUEST_ENDED,\n  DB_REQUEST_STARTED,\n  DB_REQUEST_ENDED,\n} from '../action-types';\n\nfunction formatAPIResponse(data) {\n  return {\n    title: data.Title || '',\n    type: data.Type,\n    year: data.Year,\n    genre: data.Genre || '',\n    imdbID: data.imdbID,\n    poster: data.Poster,\n    actors: data.Actors || '',\n    director: data.Director || '',\n    country: data.Country || '',\n    duration: data.Duration || '',\n    release: data.Release || '',\n    imdbRating: data.imdbRating || '',\n    runtime: data.Runtime || '',\n    plot: data.Plot || '',\n  };\n}\n\nfunction actionError(message) {\n  return { type: SHOW_NOTIFICATION, payload: { type: 'error', message } };\n}\n\nfunction actionRemoveList(list) {\n  return { type: REMOVE_LIST, payload: list };\n}\n\nfunction actionSearchMovie(data) {\n  return {\n    type: SEARCH_MOVIE,\n    payload: data.map((item) => formatAPIResponse(item)),\n  };\n}\n\nfunction actionGetMovieInfo(data) {\n  return { type: GET_MOVIE_INFO, payload: formatAPIResponse(data) };\n}\n\nexport const searchMovie = (query) => (dispatch) => {\n  dispatch({ type: API_REQUEST_STARTED });\n  api\n    .searchMovie(query)\n    .then((data) => {\n      if (data?.Search) {\n        dispatch(actionSearchMovie(data.Search));\n      } else {\n        dispatch(actionError(data.Error));\n      }\n    })\n    .catch((error) => dispatch(actionError(error.message)))\n    .finally(() => dispatch({ type: API_REQUEST_ENDED }));\n};\n\nexport const getMovieInfo = (id) => (dispatch) => {\n  dispatch({ type: API_REQUEST_STARTED });\n  api\n    .getMovieInfo(id)\n    .then((data) => {\n      if (data) {\n        dispatch(actionGetMovieInfo(data));\n      } else {\n        dispatch(actionError(data.Error));\n      }\n    })\n    .catch((error) => dispatch(actionError(error.message)))\n    .finally(() => dispatch({ type: API_REQUEST_ENDED }));\n};\n\nexport const addItem = (uid, data) => (dispatch) => {\n  if (uid) {\n    dispatch({ type: DB_REQUEST_STARTED });\n    db.addItem(uid, data)\n      .then(() => dispatch({ type: ADD_ITEM, payload: data }))\n      .catch((error) => dispatch(actionError(error.message)))\n      .finally(() => dispatch({ type: DB_REQUEST_ENDED }));\n  } else {\n    dispatch({ type: ADD_ITEM, payload: data });\n  }\n};\n\nexport const updateItem = (uid, data) => (dispatch) => {\n  if (uid) {\n    dispatch({ type: DB_REQUEST_STARTED });\n    db.updateItem(uid, data)\n      .then(() => dispatch({ type: UPDATE_ITEM, payload: data }))\n      .catch((error) => dispatch(actionError(error.message)))\n      .finally(() => dispatch({ type: DB_REQUEST_ENDED }));\n  } else {\n    dispatch({ type: UPDATE_ITEM, payload: data });\n  }\n};\n\nexport const removeItem = (uid, id) => (dispatch) => {\n  if (uid) {\n    dispatch({ type: DB_REQUEST_STARTED });\n    db.removeItem(uid, id)\n      .then(() => dispatch({ type: REMOVE_ITEM, payload: id }))\n      .catch((error) => dispatch(actionError(error.message)))\n      .finally(() => dispatch({ type: DB_REQUEST_ENDED }));\n  } else {\n    dispatch({ type: REMOVE_ITEM, payload: id });\n  }\n};\n\nexport const removeList = (uid, list) => (dispatch) => {\n  if (uid) {\n    dispatch({ type: DB_REQUEST_STARTED });\n    db.removeList(uid, list)\n      .then(() => dispatch(actionRemoveList(list)))\n      .catch((error) => dispatch(actionError(error.message)))\n      .finally(() => dispatch({ type: DB_REQUEST_ENDED }));\n  } else {\n    dispatch(actionRemoveList(list));\n  }\n};\n\nexport const getItems = (uid) => (dispatch) => {\n  dispatch({ type: DB_REQUEST_STARTED });\n  db.getItems(uid)\n    .then((response) => {\n      const data = [];\n      response.forEach((item) => data.push(item.data()));\n      dispatch({ type: GET_ITEMS, payload: data });\n    })\n    .catch((error) => dispatch(actionError(error.message)))\n    .finally(() => dispatch({ type: DB_REQUEST_ENDED }));\n};\n\nexport const sortMovies = (sortedBy) => ({\n  type: SORT_MOVIES,\n  payload: sortedBy,\n});\n","import { db, ls } from 'services';\nimport {\n  SIGN_IN,\n  SIGN_OUT,\n  SHOW_NOTIFICATION,\n  DB_REQUEST_STARTED,\n  DB_REQUEST_ENDED,\n} from '../action-types';\n\nfunction actionError(message) {\n  return {\n    type: SHOW_NOTIFICATION,\n    payload: { type: 'error', message },\n  };\n}\n\nfunction actionSignIn(response) {\n  return {\n    type: SIGN_IN,\n    payload: {\n      uid: response.user.uid,\n      email: response.user.email,\n    },\n  };\n}\n\nexport const signUpWithEmail = (email, password) => (dispatch) => {\n  dispatch({ type: DB_REQUEST_STARTED });\n  db.signUpWithEmail(email, password)\n    .then((response) => dispatch(actionSignIn(response)))\n    .catch((error) => dispatch(actionError(error.message)))\n    .finally(() => dispatch({ type: DB_REQUEST_ENDED }));\n};\n\nexport const signInWithEmail = (email, password) => (dispatch) => {\n  dispatch({ type: DB_REQUEST_STARTED });\n  db.signInWithEmail(email, password)\n    .then((response) => dispatch(actionSignIn(response)))\n    .catch((error) => dispatch(actionError(error.message)))\n    .finally(() => dispatch({ type: DB_REQUEST_ENDED }));\n};\n\nexport const signInWithGoogle = () => (dispatch) => {\n  dispatch({ type: DB_REQUEST_STARTED });\n  db.signInWithGoogle()\n    .then((response) => dispatch(actionSignIn(response)))\n    .catch((error) => dispatch(actionError(error.message)))\n    .finally(() => dispatch({ type: DB_REQUEST_ENDED }));\n};\n\nexport const signOut = () => (dispatch) => {\n  dispatch({ type: DB_REQUEST_STARTED });\n  db.signOut()\n    .then(() => dispatch({ type: SIGN_OUT }))\n    .then(() => ls.clearState())\n    .catch((error) => dispatch(actionError(error.message)))\n    .finally(() => dispatch({ type: DB_REQUEST_ENDED }));\n};\n","import { db } from 'services';\nimport {\n  GET_SETTINGS,\n  UPDATE_SETTINGS,\n  SHOW_NOTIFICATION,\n  DB_REQUEST_STARTED,\n  DB_REQUEST_ENDED,\n} from '../action-types';\n\nfunction actionError(message) {\n  return {\n    type: SHOW_NOTIFICATION,\n    payload: { type: 'error', message },\n  };\n}\n\nexport const getSettings = (uid) => (dispatch) => {\n  dispatch({ type: DB_REQUEST_STARTED });\n  db.getSettings(uid)\n    .then((response) => {\n      if (response.data()) {\n        dispatch({ type: GET_SETTINGS, payload: response.data() });\n      }\n    })\n    .catch((error) => dispatch(actionError(error.message)))\n    .finally(() => dispatch({ type: DB_REQUEST_ENDED }));\n};\n\nexport const updateSettings = (uid, data) => (dispatch) => {\n  if (uid) {\n    dispatch({ type: DB_REQUEST_STARTED });\n    db.updateSettings(uid, data)\n      .then(() => dispatch({ type: UPDATE_SETTINGS, payload: data }))\n      .catch((error) => dispatch(actionError(error.message)))\n      .finally(() => dispatch({ type: DB_REQUEST_ENDED }));\n  } else {\n    dispatch({ type: UPDATE_SETTINGS, payload: data });\n  }\n};\n","import { SHOW_MODAL, HIDE_MODAL } from '../action-types';\n\nexport const showModal = (data) => ({\n  type: SHOW_MODAL,\n  payload: data,\n});\n\nexport const hideModal = (modalName) => ({\n  type: HIDE_MODAL,\n  payload: modalName,\n});\n","import React, { useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Localization } from 'contexts';\nimport { useDispatch } from 'react-redux';\nimport { searchMovie } from 'store/actions';\nimport { UIInput, UIIconButton } from 'components';\n\nimport './SearchMovieForm.scss';\n\nconst SearchMovieForm = React.memo(() => {\n  const STR = useContext(Localization);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [query, setQuery] = useState('');\n  const [isFormVisible, setFormVisible] = useState(false);\n\n  function handleSubmit(evt) {\n    if (query) {\n      evt.preventDefault();\n      dispatch(searchMovie(query));\n      history.push('/');\n    }\n  }\n  function handleChange(evt) {\n    setQuery(evt.target.value);\n  }\n  function toggleForm() {\n    setFormVisible(!isFormVisible);\n  }\n\n  return (\n    <div className={`search-movie-form-container${isFormVisible ? ' visible' : ''}`}>\n      <UIIconButton\n        icon=\"left-open\"\n        extraClassName=\"search-movie-form__btn-hide\"\n        onClick={toggleForm}\n      />\n      <form className=\"search-movie-form\" onSubmit={handleSubmit}>\n        <UIInput\n          type=\"search\"\n          value={query}\n          onChange={handleChange}\n          extraClassName=\"search-movie-form__input\"\n          placeholder={STR.SEARCH_MOVIE_PLACEHOLDER}\n          required\n        />\n        <UIIconButton\n          type=\"submit\"\n          icon=\"search\"\n          title={STR.SEARCH_MOVIE}\n          extraClassName=\"search-movie-form__btn\"\n          onClick={handleSubmit}\n        />\n      </form>\n      <UIIconButton\n        icon=\"search\"\n        extraClassName=\"search-movie-form__btn-show\"\n        onClick={toggleForm}\n      />\n    </div>\n  );\n});\n\nexport { SearchMovieForm };\n","/* eslint-disable no-alert */\n/* eslint-disable react/prop-types */\n\nimport { useState, useEffect } from 'react';\nimport { UIIconButton, UIInput } from 'components';\n\nimport './MovieListTitle.scss';\n\nconst MovieListTitle = ({\n  title, isUserList, onSaveClick, onDeleteClick, STR,\n}) => {\n  const [listTitle, setListTitle] = useState(title);\n  const [oldTitle, setOldTitle] = useState(title);\n  const [isEditMode, setEditMode] = useState(false);\n  useEffect(() => {\n    setListTitle(title);\n    setOldTitle(title);\n  }, [title]);\n\n  function handleEditClick() {\n    setEditMode(!isEditMode);\n  }\n\n  function handleSaveClick() {\n    if (listTitle !== oldTitle) {\n      onSaveClick(listTitle);\n    }\n    setEditMode(false);\n  }\n\n  function handleChange(evt) {\n    setListTitle(evt.target.value);\n  }\n\n  function handleDeleteClick() {\n    if (window.confirm(STR.ARE_YOU_SURE_YOU_WANT_TO_DELETE_THIS_LIST)) {\n      setEditMode(false);\n      onDeleteClick();\n    }\n  }\n\n  return (\n    <div className=\"movie-list-title\">\n      <UIInput\n        value={listTitle}\n        onChange={handleChange}\n        disabled={!isEditMode}\n        extraClassName=\"movie-list-title__input\"\n      />\n      {isUserList && (\n        <>\n          {!isEditMode && (<UIIconButton icon=\"pencil\" title={STR.EDIT_LIST} onClick={handleEditClick} />)}\n          {isEditMode && (<UIIconButton icon=\"ok\" title={STR.SAVE_CHANGES} onClick={handleSaveClick} />)}\n          {isEditMode && (<UIIconButton icon=\"trash\" title={STR.DELETE_LIST} onClick={handleDeleteClick} />)}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport { MovieListTitle };\n","import { useState, useContext } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  showModal, getMovieInfo, sortMovies, updateSettings, removeList,\n} from 'store/actions';\nimport {\n  getSearchResults, getMoviesByList, getUserLists, getUserId,\n} from 'store/selectors';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { Localization } from 'contexts';\nimport {\n  MovieModal, MovieListItem, MovieListSorter,\n} from 'components';\nimport { MovieListTitle } from './MovieListTitle';\n\nimport './MovieList.scss';\n\nconst MovieList = () => {\n  const STR = useContext(Localization);\n  const dispatch = useDispatch();\n  const [sortedBy, setSortedBy] = useState('none');\n  const sortOptions = [\n    { value: 'none', label: '— — —', disabled: true },\n    { value: 'title-asc', label: STR.SORT_BY_TITLE_A_Z },\n    { value: 'title-dsc', label: STR.SORT_BY_TITLE_Z_A },\n    { value: 'year-asc', label: STR.SORT_BY_YEAR_ASC },\n    { value: 'year-dsc', label: STR.SORT_BY_YEAR_DSC },\n  ];\n  const predefinedLists = [\n    { id: 'favourites', title: STR.FAVOURITES, icon: 'heart' },\n    { id: 'watched', title: STR.WATCHED, icon: 'history' },\n    { id: 'watch-later', title: STR.WATCH_LATER, icon: 'clock' }];\n  const userLists = useSelector(getUserLists);\n  const uid = useSelector(getUserId);\n  const availableLists = [...predefinedLists, ...userLists];\n  const history = useHistory();\n  const list = useLocation().pathname.slice(1);\n  const isUserList = userLists.some((item) => item.id === list);\n  const listTitle = availableLists.find((item) => item.id === list)?.title || STR.HOME;\n  const data = list\n    ? useSelector((state) => getMoviesByList(state, list))\n    : useSelector(getSearchResults);\n\n  function handleShowInfoClick(id) {\n    dispatch(getMovieInfo(id));\n    dispatch(showModal({ modalName: 'fav' }));\n  }\n  function handleMoviesSort(evt) {\n    const sortOption = evt.target.value;\n    dispatch(sortMovies(sortOption));\n    setSortedBy(sortOption);\n  }\n\n  function handleSaveChangesClick(newTitle) {\n    const updatedUserLists = userLists.map((item) => {\n      if (item.id === list) {\n        return { ...item, title: newTitle };\n      }\n      return item;\n    });\n    dispatch(updateSettings(uid, { userLists: updatedUserLists }));\n  }\n\n  function handleDeleteListClick() {\n    const updatedUserLists = userLists.filter((item) => item.id !== list);\n    dispatch(updateSettings(uid, { userLists: updatedUserLists }));\n    dispatch(removeList(uid, list));\n    history.push('/');\n  }\n\n  return (\n    <section className=\"movie-list-container\">\n      <MovieListTitle\n        title={listTitle}\n        onSaveClick={handleSaveChangesClick}\n        onDeleteClick={handleDeleteListClick}\n        isUserList={isUserList}\n        STR={STR}\n      />\n\n      {(data.length > 0 && list) && (\n        <MovieListSorter\n          options={sortOptions}\n          onChange={handleMoviesSort}\n          title={STR.SORT_MOVIES}\n          value={sortedBy}\n        />\n      )}\n      <ul className=\"movie-list\">\n        {data.map((item) => (\n          <MovieListItem\n            key={item.imdbID}\n            data={item}\n            onShowInfoClick={handleShowInfoClick}\n          />\n        ))}\n      </ul>\n      <MovieModal />\n    </section>\n  );\n};\n\nexport { MovieList };\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { MovieMenu } from 'components';\n\nimport './MovieListItem.scss';\n\nconst MovieListItem = React.memo((props) => {\n  const {\n    data: {\n      title, poster, year, imdbID,\n    },\n    onShowInfoClick,\n  } = props;\n\n  function handleShowInfoClick() {\n    onShowInfoClick(imdbID);\n  }\n\n  return (\n    <li id={imdbID} className=\"movie-list-item\">\n      <MovieMenu id={imdbID} />\n      <img\n        src={poster}\n        alt=\"Poster\"\n        width=\"320\"\n        height=\"480\"\n        className=\"movie-list-item__poster\"\n        onClick={handleShowInfoClick}\n        loading=\"lazy\"\n      />\n      <div className=\"movie-list-item__details\">\n        <span className=\"movie-list-item__title\">{title}</span>\n        <span className=\"movie-list-item__year\">{year}</span>\n      </div>\n    </li>\n  );\n});\n\nMovieListItem.propTypes = {\n  data: PropTypes.shape().isRequired,\n  onShowInfoClick: PropTypes.func.isRequired,\n};\n\nexport { MovieListItem };\n","import PropTypes from 'prop-types';\nimport { UISelect } from 'components';\n\nimport './MovieListSorter.scss';\n\nconst MovieListSorter = (props) => {\n  const {\n    onChange, value, options, title,\n  } = props;\n\n  return (\n    <div className=\"movie-list-sorter\">\n      <span className=\"movie-list-sorter__label\">\n        {title}\n      </span>\n      <UISelect\n        options={options}\n        onChange={onChange}\n        value={value}\n        title={title}\n        extraClassName=\"movie-list-sorter__select\"\n      />\n    </div>\n  );\n};\n\nMovieListSorter.defaultProps = {\n  title: '',\n};\n\nMovieListSorter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.string,\n      label: PropTypes.string,\n    }),\n  ).isRequired,\n  title: PropTypes.string,\n  value: PropTypes.string.isRequired,\n};\n\nexport { MovieListSorter };\n","import './MovieModalSkeleton.scss';\n\nconst MovieModalSkeleton = () => (\n  <div className=\"movie-modal-skeleton\">\n    <div className=\"movie-modal-skeleton__poster skeleton\" />\n    <div className=\"movie-modal-skeleton__details\">\n      <div className=\"movie-modal-skeleton__title skeleton\" />\n      <div className=\"movie-modal-skeleton__plot skeleton\" />\n      <div className=\"movie-modal-skeleton__info skeleton\" />\n    </div>\n  </div>\n);\n\nexport { MovieModalSkeleton };\n","/* eslint-disable react/jsx-one-expression-per-line */\n\nimport PropTypes from 'prop-types';\nimport { useContext } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { hideModal } from 'store/actions';\nimport { getIsFavModalVisible, getMovieInfo } from 'store/selectors';\nimport { Localization } from 'contexts';\nimport { UIModal, MovieMenu } from 'components';\nimport { MovieModalSkeleton } from './MovieModalSkeleton';\n\nimport './MovieModal.scss';\n\nconst MovieModal = () => {\n  const isVisible = useSelector(getIsFavModalVisible);\n  const {\n    isLoading, data: {\n      title, year, poster, runtime, genre, director, country, plot, imdbRating, actors, imdbID,\n    },\n  } = useSelector(getMovieInfo);\n  const dispatch = useDispatch();\n  const STR = useContext(Localization);\n\n  function handleModalClose() {\n    dispatch(hideModal('fav'));\n  }\n\n  return isVisible ? (\n    <UIModal isVisible={isVisible} onClose={handleModalClose} title={STR.MOVIE_INFO} extraClassName=\"movie-modal\">\n      {!isLoading ? (\n        <div className=\"movie-modal__content\">\n          <div className=\"movie-modal__poster\">\n            <img src={poster} alt=\"Poster\" width=\"240\" height=\"350\" />\n            <MovieMenu id={imdbID} />\n          </div>\n          <div className=\"movie-modal__details\">\n            <h4 className=\"movie-modal__title\">{title}</h4>\n            <p className=\"movie-modal__plot\">{plot}</p>\n            <ul className=\"movie-modal__info\">\n              <li><strong>{STR.GENRE}:</strong>{genre}</li>\n              <li><strong>{STR.CAST}:</strong>{actors}</li>\n              <li><strong>{STR.DIRECTOR}:</strong>{director}</li>\n              <li><strong>{STR.COUNTRY}:</strong>{country}</li>\n              <li><strong>{STR.DURATION}:</strong>{runtime}</li>\n              <li><strong>{STR.RELEASE}:</strong>{year}</li>\n              <li><strong>{STR.RATING}:</strong>{imdbRating}</li>\n            </ul>\n          </div>\n        </div>\n      ) : <MovieModalSkeleton />}\n    </UIModal>\n  ) : null;\n};\n\nMovieModal.defaultProps = {\n  STR: {\n    MOVIE_INFO: 'Movie info',\n  },\n};\n\nMovieModal.propTypes = {\n  STR: PropTypes.shape({\n    MOVIE_INFO: PropTypes.string,\n  }),\n};\n\nexport { MovieModal };\n","import PropTypes from 'prop-types';\n\nimport './MovieMenuItem.scss';\n\nconst MovieMenuItem = ({\n  list, onClick, checked, title,\n}) => (\n  <li className=\"movie-menu-item\">\n    <label htmlFor={list}>\n      <input type=\"checkbox\" id={list} value={list} onChange={onClick} checked={checked} />\n      {title}\n    </label>\n  </li>\n);\n\nMovieMenuItem.defaultProps = {\n  list: '',\n  onClick: null,\n  checked: false,\n  title: '',\n};\n\nMovieMenuItem.propTypes = {\n  list: PropTypes.string,\n  onClick: PropTypes.func,\n  checked: PropTypes.bool,\n  title: PropTypes.string,\n};\n\nexport { MovieMenuItem };\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { UIInput, UIIconButton } from 'components';\n\nimport './MovieMenuForm.scss';\n\nconst MovieMenuForm = ({ onSubmit, STR }) => {\n  const [listTitle, setListTitle] = useState('');\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onSubmit(listTitle);\n    setListTitle('');\n  }\n  function handleChange(evt) {\n    setListTitle(evt.target.value);\n  }\n\n  return (\n    <form className=\"movie-menu-form\" onSubmit={handleSubmit}>\n      <UIInput\n        type=\"text\"\n        value={listTitle}\n        onChange={handleChange}\n        extraClassName=\"movie-menu-form__input\"\n        placeholder={STR.NEW_LIST}\n        required\n      />\n      <UIIconButton\n        type=\"submit\"\n        icon=\"plus\"\n        title={STR.ADD}\n        extraClassName=\"movie-menu-form__btn\"\n      />\n    </form>\n  );\n};\n\nMovieMenuForm.defaultProps = {\n  onSubmit: null,\n  STR: PropTypes.shape({ NEW_LIST: 'New list', ADD: 'Add' }),\n};\n\nMovieMenuForm.propTypes = {\n  onSubmit: PropTypes.func,\n  STR: PropTypes.shape({ NEW_LIST: PropTypes.string, ADD: PropTypes.string }),\n};\n\nexport { MovieMenuForm };\n","/* eslint-disable react/prop-types */\nimport { useContext, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateItem, removeItem, updateSettings } from 'store/actions';\nimport {\n  getUserId, getMovieById, getSearchResultById, getUserLists,\n} from 'store/selectors';\nimport { Localization } from 'contexts';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { UIDropdown } from 'components';\nimport { MovieMenuItem } from './MovieMenuItem';\nimport { MovieMenuForm } from './MovieMenuForm';\n\nimport './MovieMenu.scss';\n\nconst MovieMenu = ({ id }) => {\n  const dispatch = useDispatch();\n  const uid = useSelector(getUserId);\n  const saved = useSelector((state) => getMovieById(state, id));\n  const searched = useSelector((state) => getSearchResultById(state, id));\n  const userLists = useSelector(getUserLists);\n  const STR = useContext(Localization);\n  const predefinedLists = [\n    { id: 'favourites', title: STR.FAVOURITES },\n    { id: 'watched', title: STR.WATCHED },\n    { id: 'watch-later', title: STR.WATCH_LATER },\n  ];\n  const [isMenuOpened, setMenuOpened] = useState(false);\n  const movie = saved || searched;\n  const lists = movie?.lists ? movie.lists : [];\n\n  function handleMenuItemClick(evt) {\n    const list = evt.target.value;\n    const updatedLists = lists.includes(list)\n      ? lists.filter((item) => item !== list)\n      : [...lists, list];\n    if (updatedLists.length) {\n      dispatch(updateItem(uid, { ...movie, id, lists: updatedLists }));\n    } else {\n      dispatch(removeItem(uid, id));\n    }\n    setMenuOpened(false);\n  }\n  function handleAddNewList(title) {\n    const updatedUserLists = [...userLists, { id: uuidv4(), title }];\n    dispatch(updateSettings(uid, { userLists: updatedUserLists }));\n  }\n  function handleMenuToggle() {\n    setMenuOpened(!isMenuOpened);\n  }\n\n  return (\n    <UIDropdown isOpened={isMenuOpened} onToggle={handleMenuToggle} extraClassName=\"movie-menu\">\n      <ul className=\"movie-menu__items\">\n        {[...predefinedLists, ...userLists].map((list) => (\n          <MovieMenuItem\n            key={list.id}\n            list={list.id}\n            checked={lists.includes(list.id)}\n            title={list.title}\n            onClick={handleMenuItemClick}\n          />\n        ))}\n      </ul>\n      <MovieMenuForm onSubmit={handleAddNewList} STR={STR} />\n    </UIDropdown>\n  );\n};\n\nexport { MovieMenu };\n","import { useContext } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Localization } from 'contexts';\nimport { updateSettings } from 'store/actions';\nimport { getAppLanguage, getUserId } from 'store/selectors';\nimport { languages } from 'assets/localization';\nimport { UISelect } from 'components';\n\nimport './LanguageSelector.scss';\n\nconst LanguageSelector = () => {\n  const dispatch = useDispatch();\n  const STR = useContext(Localization);\n  const currLang = useSelector(getAppLanguage);\n  const uid = useSelector(getUserId);\n\n  function handleLanguageChange(evt) {\n    const language = evt.target.value;\n    dispatch(updateSettings(uid, { language }));\n  }\n\n  return (\n    <UISelect\n      value={currLang}\n      onChange={handleLanguageChange}\n      options={languages}\n      extraClassName=\"language-selector\"\n      title={STR.TOGGLE_LANGUAGE}\n    />\n  );\n};\n\nexport { LanguageSelector };\n","import { useContext } from 'react';\nimport { Localization } from 'contexts';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateSettings } from 'store/actions';\nimport { getUserId, getAppTheme } from 'store/selectors';\nimport { UIIconButton } from 'components';\n\nconst ThemeToggler = () => {\n  const STR = useContext(Localization);\n  const dispatch = useDispatch();\n  const theme = useSelector(getAppTheme);\n  const uid = useSelector(getUserId);\n  const btnIcon = theme === 'light' ? 'moon' : 'sun';\n\n  function handleThemeChange() {\n    const newTheme = theme === 'light' ? 'dark' : 'light';\n    dispatch(updateSettings(uid, { theme: newTheme }));\n  }\n\n  return (\n    <UIIconButton\n      icon={btnIcon}\n      onClick={handleThemeChange}\n      title={STR.TOGGLE_THEME}\n    />\n  );\n};\n\nexport { ThemeToggler };\n","import { useContext } from 'react';\nimport { Localization } from 'contexts';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { showModal, signOut } from 'store/actions';\nimport { getIsUserLogged } from 'store/selectors';\nimport { UIIconButton } from 'components';\n\nconst AuthBtn = () => {\n  const STR = useContext(Localization);\n  const dispatch = useDispatch();\n  const isLogged = useSelector(getIsUserLogged);\n\n  function handleLogInClick() {\n    if (isLogged) {\n      dispatch(signOut());\n    } else {\n      dispatch(showModal({ modalName: 'auth', data: null }));\n    }\n  }\n\n  return (\n    <UIIconButton\n      icon={isLogged ? 'user' : 'user-o'}\n      title={isLogged ? STR.SIGN_OUT : STR.SIGN_IN}\n      onClick={handleLogInClick}\n    />\n  );\n};\n\nexport { AuthBtn };\n","import PropTypes from 'prop-types';\nimport { UIButton, UIInput } from 'components';\n\nimport './SignInForm.scss';\n\nconst SignInForm = (props) => {\n  const {\n    onSubmit,\n    onChange,\n    data: { email, password },\n    STR,\n  } = props;\n\n  return (\n    <form onSubmit={onSubmit} className=\"signin-form\">\n      <UIInput\n        type=\"email\"\n        name=\"email\"\n        value={email}\n        extraClassName=\"signin-form__input\"\n        placeholder={STR.YOUR_EMAIL}\n        onChange={onChange}\n        autofocus\n        required\n      />\n      <UIInput\n        type=\"password\"\n        name=\"password\"\n        extraClassName=\"signin-form__input\"\n        value={password}\n        placeholder={STR.YOUR_PASSWORD}\n        onChange={onChange}\n        required\n      />\n      <div className=\"signin-form__btns\">\n        <UIButton\n          type=\"submit\"\n          btnType=\"primary\"\n          text={STR.SIGN_IN}\n          onClick={onSubmit}\n        />\n      </div>\n    </form>\n  );\n};\n\nSignInForm.defaultProps = {\n  STR: {\n    YOUR_EMAIL: 'Your Email',\n    YOUR_PASSWORD: 'Your password',\n    SIGN_IN: 'Sign In',\n  },\n};\n\nSignInForm.propTypes = {\n  data: PropTypes.shape({\n    email: PropTypes.string,\n    password: PropTypes.string,\n  }).isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  STR: PropTypes.shape({\n    YOUR_EMAIL: PropTypes.string,\n    YOUR_PASSWORD: PropTypes.string,\n    SIGN_IN: PropTypes.string,\n  }),\n};\n\nexport { SignInForm };\n","import PropTypes from 'prop-types';\nimport { UIButton, UIInput } from 'components';\n\nimport './SignUpForm.scss';\n\nconst SignUpForm = (props) => {\n  const {\n    onSubmit,\n    onChange,\n    data: { email, password },\n    STR,\n  } = props;\n\n  return (\n    <form onSubmit={onSubmit} className=\"signup-form\">\n      <UIInput\n        type=\"email\"\n        name=\"email\"\n        value={email}\n        extraClassName=\"signup-form__input\"\n        placeholder={STR.YOUR_EMAIL}\n        onChange={onChange}\n        required\n      />\n      <UIInput\n        type=\"password\"\n        name=\"password\"\n        value={password}\n        extraClassName=\"signup-form__input\"\n        placeholder={STR.YOUR_PASSWORD}\n        onChange={onChange}\n        required\n      />\n      <div className=\"signup-form__btns\">\n        <UIButton\n          type=\"submit\"\n          btnType=\"primary\"\n          text={STR.CREATE_AN_ACCOUNT}\n          onClick={onSubmit}\n        />\n      </div>\n    </form>\n  );\n};\n\nSignUpForm.defaultProps = {\n  STR: {\n    YOUR_EMAIL: 'Your Email',\n    YOUR_PASSWORD: 'Your password',\n    CREATE_AN_ACCOUNT: 'Create an account',\n  },\n};\n\nSignUpForm.propTypes = {\n  data: PropTypes.shape({\n    email: PropTypes.string,\n    password: PropTypes.string,\n  }).isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  STR: PropTypes.shape({\n    YOUR_EMAIL: PropTypes.string,\n    YOUR_PASSWORD: PropTypes.string,\n    CREATE_AN_ACCOUNT: PropTypes.string,\n  }),\n};\n\nexport { SignUpForm };\n","import PropTypes from 'prop-types';\nimport { UIIconButton } from 'components';\n\nimport './SocialLogInForm.scss';\n\nconst SocialLogInForm = (props) => {\n  const { onSignInWithGoogle, STR } = props;\n\n  return (\n    <div className=\"social-login\">\n      <div className=\"social-login__label\">{STR.CONNECT_WITH}</div>\n      <div className=\"social-login__btns\">\n        <UIIconButton\n          icon=\"google\"\n          onClick={onSignInWithGoogle}\n          extraClassName=\"social-login__btn\"\n        />\n      </div>\n    </div>\n  );\n};\nSocialLogInForm.defaultProps = {\n  STR: { CONNECT_WITH: 'or connect with' },\n};\n\nSocialLogInForm.propTypes = {\n  onSignInWithGoogle: PropTypes.func.isRequired,\n  STR: PropTypes.shape({ CONNECT_WITH: PropTypes.string }),\n};\n\nexport { SocialLogInForm };\n","/* eslint-disable no-unused-vars */\nimport { useContext, useState, useEffect } from 'react';\nimport { Localization } from 'contexts';\nimport { UITabs, UIModal } from 'components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  signInWithEmail, signInWithGoogle, signUpWithEmail, hideModal,\n} from 'store/actions';\nimport { getIsUserLogged, getIsAuthModalVisible } from 'store/selectors';\nimport { SignInForm } from './SignInForm';\nimport { SignUpForm } from './SignUpForm';\nimport { SocialLogInForm } from './SocialLogInForm';\n\nimport './AuthModal.scss';\n\nconst AuthModal = () => {\n  const STR = useContext(Localization);\n  const dispatch = useDispatch();\n  const isLogged = useSelector(getIsUserLogged);\n  const isModalVisible = useSelector(getIsAuthModalVisible);\n  const initialFormData = { email: '', password: '' };\n  const [formData, setFormData] = useState(initialFormData);\n  useEffect(() => {\n    if (isLogged) {\n      setFormData(initialFormData);\n      dispatch(hideModal('auth'));\n    }\n  }, [isLogged]);\n  function onModalClose() {\n    setFormData(initialFormData);\n    dispatch(hideModal('auth'));\n  }\n  function onSignIn(event) {\n    if (formData.email && formData.password) {\n      event.preventDefault();\n      dispatch(signInWithEmail(formData.email, formData.password));\n    }\n  }\n  function onSignInWithGoogle() {\n    dispatch(signInWithGoogle());\n  }\n  function onSignUp(event) {\n    if (formData.email && formData.password) {\n      event.preventDefault();\n      dispatch(signUpWithEmail(formData.email, formData.password));\n    }\n  }\n  function onFormChange(event) {\n    const { name, value } = event.target;\n    setFormData({ ...formData, [name]: value });\n  }\n  function onFormReset() {\n    setFormData(initialFormData);\n  }\n\n  return isModalVisible ? (\n    <UIModal isVisible={isModalVisible} onClose={onModalClose} title={STR.AUTHENIFICATION}>\n      <UITabs labels={[STR.SIGN_IN, STR.SIGN_UP]} extraClassName=\"auth-form__tabs\" onTabClick={onFormReset}>\n        <SignInForm\n          onSubmit={onSignIn}\n          onChange={onFormChange}\n          data={formData}\n          STR={STR}\n        />\n        <SignUpForm\n          onSubmit={onSignUp}\n          onChange={onFormChange}\n          data={formData}\n          STR={STR}\n        />\n      </UITabs>\n      <SocialLogInForm\n        onSignInWithGoogle={onSignInWithGoogle}\n        STR={STR}\n      />\n    </UIModal>\n  )\n    : null;\n};\n\nexport { AuthModal };\n","import { useSelector, useDispatch } from 'react-redux';\nimport { UINotification } from 'components';\nimport { hideNotification } from 'store/actions';\nimport { getNotifications } from 'store/selectors';\n\nconst NotificationService = () => {\n  const dispatch = useDispatch();\n  const { message, type } = useSelector(getNotifications);\n  const isVisible = !!message;\n\n  function handleCloseClick() {\n    dispatch(hideNotification());\n  }\n\n  return (\n    <UINotification\n      isVisible={isVisible}\n      type={type}\n      message={message}\n      onCloseClick={handleCloseClick}\n    />\n  );\n};\n\nexport { NotificationService };\n","import { SHOW_NOTIFICATION, HIDE_NOTIFICATION } from '../action-types';\n\nexport const showNotification = (data) => ({\n  type: SHOW_NOTIFICATION,\n  payload: data,\n});\n\nexport const hideNotification = () => ({\n  type: HIDE_NOTIFICATION,\n});\n","import {\n  Nav, Main, Header,\n} from 'components';\nimport PropTypes from 'prop-types';\n\nconst BaseLayout = ({ children }) => (\n  <div className=\"container\">\n    <Header />\n    <Nav />\n    <Main>\n      {children}\n    </Main>\n  </div>\n);\n\nBaseLayout.defaultProps = {\n  children: null,\n};\n\nBaseLayout.propTypes = {\n  children: PropTypes.node,\n};\n\nexport { BaseLayout };\n","import { MovieList } from 'components';\nimport { BaseLayout } from 'layouts';\n\nconst Home = () => (\n  <BaseLayout>\n    <MovieList />\n  </BaseLayout>\n);\n\nexport { Home };\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getItems, getSettings } from 'store/actions';\nimport { getUserId, getIsUserLogged, getAppTheme } from 'store/selectors';\nimport { AuthModal, NotificationService } from 'components';\nimport { Home } from 'pages';\nimport { HashRouter as Router } from 'react-router-dom';\n\nconst App = () => {\n  const uid = useSelector(getUserId);\n  const isLogged = useSelector(getIsUserLogged);\n  const theme = useSelector(getAppTheme);\n  document.documentElement.setAttribute('data-theme', theme);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (isLogged) {\n      dispatch(getItems(uid));\n      dispatch(getSettings(uid));\n    }\n  }, [isLogged]);\n\n  return (\n    <>\n      <Router>\n        <Home />\n      </Router>\n      <AuthModal />\n      <NotificationService />\n    </>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from 'store';\nimport { ErrorBoundary } from 'components';\nimport { LocalizationProvider } from 'contexts';\n\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <ErrorBoundary>\n      <LocalizationProvider>\n        <App />\n      </LocalizationProvider>\n    </ErrorBoundary>\n  </Provider>, document.getElementById('root'),\n);\n"],"sourceRoot":""}